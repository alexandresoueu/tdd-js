{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 2f11e657c0141fc18cb3","webpack:///./~/react/index.js","webpack:///./~/object-assign/index.js","webpack:///./utils.js","webpack:///./~/ramda/dist/ramda.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./app.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","toObject","val","undefined","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","arguments","length","key","sum","a","b","sub","mult","div","PI","__","@@functional/placeholder","_arity","fn","apply","this","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_arrayFromIterator","iter","next","list","done","push","_arrayOf","Array","slice","_cloneRegExp","pattern","RegExp","global","ignoreCase","multiline","sticky","unicode","_complement","f","_concat","set1","set2","idx","len1","len2","result","_containsWith","pred","x","len","_filter","_forceReduced","@@transducer/value","@@transducer/reduced","_functionName","match","_has","prop","obj","_identity","_isArguments","toString","_isArray","isArray","_isFunction","_isInteger","Number","isInteger","_isNumber","_isObject","_isPlaceholder","_isRegExp","_isString","_isTransformer","_map","functor","_objectAssign","output","nextKey","_of","_pipe","g","_pipeP","ctx","then","_quote","replace","_reduced","_slice","args","Math","max","min","_toISOString","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_xfBase","init","xf","_xwrap","XWrap","acc","_aperture","limit","_assign","_checkForMethod","methodname","_curry1","f1","_curry2","f2","_b","_a","_curry3","f3","_c","_curryN","received","combined","argsIdx","left","combinedIdx","_dispatchable","_dropLastWhile","_xall","XAll","all","input","_xany","XAny","any","_xaperture","XAperture","pos","full","store","getCopy","_xdrop","XDrop","_xdropLast","XDropLast","_xdropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropWhile","XDropWhile","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","last","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xreduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","_xtake","XTake","ret","_xtakeWhile","XTakeWhile","add","adjust","start","_idx","_list","always","and","aperture","append","el","assoc","assocPath","path","bind","thisObj","clamp","comparator","curryN","dec","defaultTo","v","differenceWith","first","second","out","firstLen","dissoc","dissocPath","head","tail","divide","dropWhile","empty","constructor","evolve","transformations","transformation","type","find","findIndex","findLast","findLastIndex","fromPairs","pairs","groupWith","res","nextidx","gt","gte","has","hasIn","identical","identity","ifElse","condition","onTrue","onFalse","inc","insert","elt","splice","insertAll","elts","intersperse","separator","is","Ctor","isArrayLike","nodeType","isNil","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","keysIn","NaN","lt","lte","mapAccum","tuple","mapAccumRight","rx","str","mathMod","maxBy","merge","r","mergeAll","concat","mergeWithKey","k","minBy","modulo","multiply","nAry","negate","none","not","nth","offset","charAt","nthArg","objOf","of","once","called","or","over","Identity","lens","y","pair","fst","snd","paths","pathOr","pathSatisfies","propPath","pick","names","pickAll","pickBy","test","prepend","propIs","propOr","propSatisfies","props","ps","range","reduceRight","reduced","remove","count","regex","replacement","reverse","scan","set","fromIndex","toIndex","sort","sortBy","aa","bb","splitAt","index","array","splitEvery","splitWhen","prefix","subtract","Infinity","take","xs","takeLastWhile","takeWhile","tap","times","isNaN","RangeError","toPairs","toPairsIn","transpose","outerlist","innerlist","j","trim","ws","hasProtoTrim","beginRx","endRx","tryCatch","tryer","catcher","e","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","uniqWith","unless","whenFalseFn","until","update","useWith","transformers","values","vals","valuesIn","vs","view","Const","when","whenTrueFn","where","spec","testObj","wrap","wrapper","xprod","ilen","jlen","zip","rv","zipObj","zipWith","F","T","_clone","refFrom","refTo","deep","copy","copiedValue","valueOf","_createPartialApplicator","_dropLast","_equals","stackA","stackB","equals","message","entries","keysA","pop","_makeFlat","recursive","flatt","_reduce","_arrayReduce","_iterableReduce","step","_methodReduce","reduce","symIterator","Symbol","iterator","_stepCat","_stepCatArray","@@transducer/init","@@transducer/step","@@transducer/result","_stepCatString","_stepCatObject","_xdropLastWhile","XDropLastWhile","retained","retain","flush","addIndex","origFn","binary","clone","curry","drop","dropLast","dropLastWhile","filter","filterable","flatten","flip","intersectionWith","list1","list2","lookupList","filteredList","results","into","invert","invertObj","isEmpty","lastIndexOf","mapObjIndexed","mergeWith","_","_l","_r","partial","partialRight","pathEq","_path","pluck","project","propEq","reduceBy","reduceWhile","reject","repeat","takeLast","transduce","unionWith","whereEq","_flatCat","preservingReduced","rxf","_indexOf","inf","indexOf","_xchain","allPass","preds","anyPass","ap","applicative","applySpec","chain","monad","cond","arity","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","after","fns","context","countBy","elem","dropRepeatsWith","eqBy","eqProps","obj1","obj2","groupBy","indexBy","juxt","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","liftN","lifted","mean","median","width","partition","pipe","pipeP","product","sequence","traversable","traverse","unnest","_contains","_toString","seen","recur","mapPairs","repr","compose","composeK","composeP","construct","difference","dropRepeats","lift","omit","pipeK","without","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","size","bIdx","both","complement","either","invoker","method","memoize","cache","symmetricDifference","symmetricDifferenceWith","toLower","toUpper","uniqBy","appliedItem","uniq","intersection","union","R","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","ca","h","framesToPop","t","encodeURIComponent","da","onError","ka","ea","fa","ja","la","ha","ia","oa","ma","na","pa","extractEvents","eventTypes","qa","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","xa","currentTarget","wa","ya","za","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Da","stateNode","ua","disabled","Ea","Aa","Ia","Ga","parentNode","tag","Ja","Ka","La","Ha","Ma","return","Na","dispatchConfig","Oa","_targetInst","Pa","Qa","Ra","Ta","toLowerCase","Xa","Va","Ua","Wa","gb","fb","eb","cb","textContent","hb","ib","z","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","kb","eventPool","lb","destructor","jb","getPooled","wb","ob","keyCode","xb","detail","data","zb","which","vb","tb","Ab","yb","pb","ctrlKey","altKey","metaKey","char","sb","locale","Hb","va","Cb","Ib","Db","Eb","Jb","Kb","Lb","Mb","Ob","Nb","Qb","nodeName","Pb","Rb","srcElement","window","correspondingUseElement","Sb","Sa","document","createElement","setAttribute","Tb","Ub","getOwnPropertyDescriptor","getValue","setValue","stopTracking","_valueTracker","Vb","Wb","checked","lc","kc","mc","displayName","fc","ac","$b","cc","bc","hc","$$typeof","ec","dc","gc","render","ic","jc","_status","_result","nc","_debugOwner","_debugSource","fileName","Yb","lineNumber","sc","pc","rc","qc","oc","tc","acceptsBooleans","uc","E","attributeName","attributeNamespace","mustUseProperty","propertyName","wc","toUpperCase","xc","removeAttribute","setAttributeNS","yc","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Ac","initialValue","controlled","Bc","Cc","Dc","Ec","ownerDocument","activeElement","Gc","Fc","change","Lc","Mc","Nc","Pc","Jc","detachEvent","Qc","Kc","Rc","attachEvent","Sc","Tc","Uc","Yc","getModifierState","Xc","Zc","id","jd","hd","kd","alternate","effectTag","ld","md","child","sibling","current","nd","rd","charCode","Cd","bubbled","captured","isInteractive","Ad","Bd","Gd","targetInst","ancestors","containerInfo","topLevelType","H","Ed","Id","Jd","addEventListener","Kd","Hd","Fd","Od","Nd","Md","Ld","Pd","body","Qd","firstChild","Rd","node","nextSibling","Sd","compareDocumentPosition","Td","HTMLIFrameElement","contentDocument","defaultView","Ud","contentEditable","ae","$d","Xd","selectionStart","end","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Zd","Wd","select","Yd","de","Children","ee","children","fe","options","selected","defaultSelected","ge","dangerouslySetInnerHTML","he","ie","je","le","me","pe","lastChild","nodeValue","se","qe","te","style","setProperty","ve","ue","we","xe","blur","ye","Be","autoFocus","Ce","__html","Fe","oe","wasMultiple","multiple","Ge","He","I","Je","Ie","J","Me","contextTypes","Ke","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","M","childContextTypes","Ne","L","K","Oe","Pe","Qe","getChildContext","Re","__reactInternalMemoizedMergedChildContext","Le","Se","Ve","We","isDisabled","supportsFiber","inject","Te","onCommitFiberRoot","Ue","onCommitFiberUnmount","Xe","elementType","ref","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","N","Ye","isReactComponent","Ze","$e","af","bf","cf","df","ef","pendingChildren","implementation","ff","didError","earliestPendingTime","latestPendingTime","gf","hf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","jf","nextExpirationTimeToWorkOn","lf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","mf","nf","payload","callback","pf","qf","rf","sf","kf","tf","uf","vf","wf","stack","Bf","_context","_currentValue","Cf","Df","yf","Af","zf","Ef","observedBits","If","Ff","Jf","Hf","Gf","O","documentElement","namespaceURI","tagName","Kf","Lf","Mf","P","defaultProps","Nf","_ctor","default","Qf","Wf","shouldComponentUpdate","isPureReactComponent","Xf","contextType","Of","currentDispatcher","readContext","state","updater","Vf","_reactInternalFiber","Zf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","$f","refs","Pf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","bg","_owner","_stringRef","cg","dg","Map","Zb","ag","w","B","q","u","delete","A","jg","kg","lg","ig","hg","gg","mg","ng","og","Q","fg","eg","qg","rg","compare","sg","tg","ug","vg","wg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","xg","pg","getDerivedStateFromError","yg","pendingContext","zg","timedOutAt","fallback","Ag","element","hydrate","hidden","_calculateChangedBits","unstable_observedBits","Bg","Kg","setTimeout","Lg","Mg","Ng","display","Og","destroy","componentWillUnmount","Pg","Qg","Rg","insertBefore","appendChild","_reactRootContainer","onclick","removeChild","Sg","Rf","Jg","Tg","Vg","Wg","Xg","componentDidCatch","Yg","componentStack","Zg","jh","S","U","eh","fh","Tf","ih","ba","unstable_cancelCallback","hh","kh","Gg","Hg","onClick","ke","html","innerHTML","createElementNS","Cg","Ig","createTextNode","lh","ah","mh","dh","$g","pendingCommitExpirationTime","nh","maxDuration","pingCache","Ug","oh","finishedWork","ph","Uf","Sf","ch","gh","qh","rh","sh","th","uh","vh","wh","Jh","Gh","unstable_now","Fh","Kh","yh","zh","unstable_scheduleCallback","Lh","timeout","timeoutHandle","De","Mh","Hh","Nh","X","Oh","Y","nextScheduledRoot","W","xh","Z","Dh","Ah","Ph","Qh","Rh","unstable_shouldYield","Ih","Eh","_onComplete","Bh","Ch","Sh","Ee","firstBatch","_expirationTime","_defer","ze","rangeCount","db","Ae","focusedElem","selectionRange","V","Yf","Vh","__reactInternalSnapshotBeforeUpdate","C","G","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","Fb","Gb","Hc","ii","Dg","Eg","ji","Ic","Fg","ce","Th","Uh","Wh","Xh","Yh","Zh","$h","ai","bh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","bi","_didCommit","_onCommit","ci","_internalRoot","di","ei","hasAttribute","fi","legacy_renderSubtreeIntoContainer","gi","hi","Ca","injectEventPluginOrder","injectEventPluginsByName","Fa","random","animationend","animationiteration","animationstart","transitionend","animation","transition","Ya","Za","$a","ab","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","mb","nb","qb","documentMode","rb","ub","beforeInput","compositionEnd","compositionStart","compositionUpdate","Bb","color","date","datetime","datetime-local","email","month","number","password","search","tel","text","time","url","week","Xb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","D","for","vc","tabIndex","Oc","Vc","_isInputEventSupported","Wc","Alt","Control","Meta","Shift","$c","ad","bd","cd","dd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","ed","pointerId","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","fd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","gd","parentWindow","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","location","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Dd","isInteractiveTopLevelEventType","Vd","be","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","mathml","svg","ne","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","re","substring","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","clearTimeout","ReactCurrentOwner","Component","isMounted","enqueueSetState","enqueueForceUpdate","WeakSet","WeakMap","querySelectorAll","JSON","stringify","form","commit","unmount","createBatch","ki","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","overrideProps","findHostInstanceByFiber","bundleType","version","rendererPackageName","li","mi","escape","=",":","keyPrefix","func","setState","forceUpdate","__self","__source","toArray","only","createRef","PureComponent","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","memo","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","previous","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","Function","eval","__WEBPACK_IMPORTED_MODULE_0_ramda__","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2_react__","__WEBPACK_IMPORTED_MODULE_3_react_dom__","arr1","arr2","arr3","arr4","log"],"mappings":"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BACApI,oBACA/M,eACAqN,QACAC,UACAC,aACAiH,WACAtU,MACAE,eACAoN,WACAlN,SACAlR,QACAoiB,QACA/hB,QACAsR,UACA/F,QACAyS,eACArd,UACA8S,QACA0O,aACAC,YACAC,YACA0B,QACAzB,SACA9Q,MACAC,OACA/R,OACAgS,YACAE,iBACAqM,iBACAzZ,SACAuN,WACAnL,OACAoL,SACAwQ,QACAC,UACAwC,WACAhT,SACAE,YACA+L,aACA7L,gBACAxL,OACA0L,SACAC,UACAC,YACAC,QACAC,UACAC,QACAC,OACAC,OACAG,UACAC,SACAC,MACA6Q,QACA5Q,QACAE,MACAC,QACAI,QACA2K,WACAC,gBACAoE,aACAvV,QACAoR,UACAzK,UACAC,iBACAE,QACAE,WACAC,UACAuO,QACAqB,SACApB,SACAnE,SACAnK,WACAuO,WACAnE,WACAja,QACAka,UACApK,UACAC,UACAC,iBACAC,SACAE,SACA6G,UACAmD,YACA/J,eACAgK,eACA/J,WACAgK,UACA/J,UACAgK,UACAzY,WACA6O,WACAC,QACA0N,YACAzN,OACAzS,SACA4S,QACAC,UACA7V,SACAgW,WACAG,cACAC,aACAE,YACAtV,OACAskB,uBACAC,2BACA/W,QACAgI,QACA4I,YACA1I,iBACAC,aACAC,OACAnC,QACAoC,SACA2O,WACAxO,WACAC,aACAhS,YACAwgB,WACApG,aACAnI,aACAkM,YACA9L,QACAK,YACA3I,QACA+I,WACAC,SACAC,YACAI,UACAyN,SACAxG,aACAsG,QACAF,UACAnN,YACAC,UACA6K,UACA3K,SACAC,UACAC,WACAE,UACAE,YACAE,QACAE,QACAE,SACAiG,WACA8E,WACA5K,QACAE,SACAG,OACAE,UACAC,WAOAvc,GAAAD,QAAAsoB,KAOCloB,KAAA+D,OLoOK,SAASlE,EAAQD,EAASH,GAEhC,YMl2RA,SAAA0oB,KAEA,GACA,mBAAAC,iCACA,kBAAAA,gCAAAD,SAcA,IAEAC,+BAAAD,YACG,MAAA5lB,GAGH8lB,QAAAC,MAAA/lB,IAOA4lB,IACAtoB,EAAAD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","file":"./build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(6);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ exports[\"b\"] = sub;\n/* harmony export (binding) */ __webpack_require__.d(exports, \"c\", function() { return mult; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"d\", function() { return div; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"e\", function() { return PI; });\nfunction sum(a, b) {\n  return a + b;\n}\n\n//named export\n//have to various exports into one file\n//same file\n//only can called to the same to name\n//import needs to the keys { sub }\nfunction sub(a, b) {\n  return a - b;\n}\n\nfunction mult(a, b) {\n  return a * b;\n}\n\nfunction div(a, b) {\n  return a / b;\n}\n\nvar PI = 3.14;\n\n\n\n//method default\n//only one default per file\n//import with qq name\n//don't need util the keys\n/* harmony default export */ exports[\"a\"] = sum;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n//  Ramda v0.22.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments, regardless of\n     * their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are\n     * equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    /* eslint-disable no-unused-vars */\n    var _arity = function _arity(n, fn) {\n        /* eslint-disable no-unused-vars */\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\n        var list = [];\n        var next;\n        while (!(next = iter.next()).done) {\n            list.push(next.value);\n        }\n        return list;\n    };\n\n    var _arrayOf = function _arrayOf() {\n        return Array.prototype.slice.call(arguments);\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n    var _functionName = function _functionName(f) {\n        // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n        var match = String(f).match(/^function (\\w*)/);\n        return match == null ? '' : match[1];\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    var _isArguments = function () {\n        var toString = Object.prototype.toString;\n        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n            return toString.call(x) === '[object Arguments]';\n        } : function _isArguments(x) {\n            return _has('callee', x);\n        };\n    }();\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    var _isFunction = function _isFunction(x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isObject = function _isObject(x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var _isPlaceholder = function _isPlaceholder(a) {\n        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n    };\n\n    var _isRegExp = function _isRegExp(x) {\n        return Object.prototype.toString.call(x) === '[object RegExp]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, functor) {\n        var idx = 0;\n        var len = functor.length;\n        var result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(functor[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    var _objectAssign = function _objectAssign(target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        var idx = 1;\n        var length = arguments.length;\n        while (idx < length) {\n            var source = arguments[idx];\n            if (source != null) {\n                for (var nextKey in source) {\n                    if (_has(nextKey, source)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n            idx += 1;\n        }\n        return output;\n    };\n\n    var _of = function _of(x) {\n        return [x];\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    // \\b matches word boundary; [\\b] matches backspace\n    var _quote = function _quote(s) {\n        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    var _aperture = function _aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    };\n\n    var _assign = typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it\n     * will default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Optimized internal one-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0 || _isPlaceholder(a)) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            switch (arguments.length) {\n            case 0:\n                return f2;\n            case 1:\n                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n                    return fn(a, _b);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b);\n                }) : fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            switch (arguments.length) {\n            case 0:\n                return f3;\n            case 1:\n                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                });\n            case 2:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _curry1(function (_c) {\n                    return fn(a, b, _c);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n                    return fn(_a, _b, c);\n                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b, c);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b, c);\n                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n                    return fn(a, b, _c);\n                }) : fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @param {Array} received An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (!_isPlaceholder(result)) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    var _dropLastWhile = function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    };\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xaperture = function () {\n        function XAperture(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n        XAperture.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XAperture.prototype['@@transducer/step'] = function (result, input) {\n            this.store(input);\n            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n        };\n        XAperture.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        XAperture.prototype.getCopy = function () {\n            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n        };\n        return _curry2(function _xaperture(n, xf) {\n            return new XAperture(n, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropLast = function () {\n        function XDropLast(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLast.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.full) {\n                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n            }\n            this.store(input);\n            return result;\n        };\n        XDropLast.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        return _curry2(function _xdropLast(n, xf) {\n            return new XDropLast(n, xf);\n        });\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xreduceBy = function () {\n        function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n            this.valueFn = valueFn;\n            this.valueAcc = valueAcc;\n            this.keyFn = keyFn;\n            this.xf = xf;\n            this.inputs = {};\n        }\n        XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n        XReduceBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            this.inputs = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.keyFn(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                this.valueAcc\n            ];\n            this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n            return result;\n        };\n        return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n            return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n            this.i = 0;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            this.i += 1;\n            var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n            return this.i >= this.n ? _reduced(ret) : ret;\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    /**\n     * Adds two values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return Number(a) + Number(b);\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array, returning a\n     * new copy of the array with the element at the given index replaced with the\n     * result of the function application.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @see R.update\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if\n     * there are any that don't.\n     *\n     * Dispatches to the `all` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n     * other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns `true` if both arguments are `true`; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n     * @see R.both\n     * @example\n     *\n     *      R.and(true, true); //=> true\n     *      R.and(true, false); //=> false\n     *      R.and(false, true); //=> false\n     *      R.and(false, false); //=> false\n     */\n    var and = _curry2(function and(a, b) {\n        return a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n     * greater than the length of the list, an empty list is returned.\n     *\n     * Dispatches to the `aperture` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @see R.transduce\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by\n     * the given element.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should be a\n     * bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value. Note that this copies and flattens prototype\n     * properties onto the new object as well. All non-primitive properties are\n     * copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes required\n     * to create the given path, and placing the specific value at the tail end of\n     * that path. Note that this copies and flattens prototype properties onto the\n     * new object as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return val;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @category Object\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     * @see R.partial\n     * @example\n     *\n     *      var log = R.bind(console.log, console);\n     *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n     *      // logs {a: 2}\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * Restricts a number to be within a range.\n     *\n     * Also works for other ordered types such as Strings and Dates.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a -> a\n     * @param {Number} minimum number\n     * @param {Number} maximum number\n     * @param {Number} value to be clamped\n     * @return {Number} Returns the clamped value\n     * @example\n     *\n     *      R.clamp(1, 10, -1) // => 1\n     *      R.clamp(1, 10, 11) // => 10\n     *      R.clamp(1, 10, 4)  // => 4\n     */\n    var clamp = _curry3(function clamp(min, max, value) {\n        if (min > max) {\n            throw new Error('min must not be greater than max in clamp(min, max, value)');\n        }\n        return value < min ? min : value > max ? max : value;\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first\n     * element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the specified\n     * arity. The curried function has two unusual capabilities. First, its\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var sumArgs = (...args) => R.sum(args);\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n     * otherwise the first argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = R.defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     *      defaultTo42(parseInt('string')); //=> 42\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null || v !== v ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      var cmp = (x, y) => x.a === y.a;\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n                out.push(first[idx]);\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the given path.\n     * Note that this copies and flattens prototype properties onto the new object\n     * as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.11.0\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list excluding the leading elements of a given list which\n     * satisfy the supplied predicate function. It passes each value to the supplied\n     * predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is applied to one argument: *(value)*.\n     *\n     * Dispatches to the `dropWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var lteTwo = x => x <= 2;\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n     * types are supported if they define `<Type>.empty` and/or\n     * `<Type>.prototype.empty`.\n     *\n     * Dispatches to the `empty` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    // else\n    var empty = _curry1(function empty(x) {\n        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n            return arguments;\n        }() : // else\n        void 0;\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`,\n     * according to the `transformation` functions. All non-primitive properties\n     * are copied by reference.\n     *\n     * A `transformation` function will not be invoked if its corresponding key\n     * does not exist in the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var result = {};\n        var transformation, key, type;\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Returns the first element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `find` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `findLast` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each\n     * element in the list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\n     * details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n     * the original array. In some libraries this function is named `each`.\n     *\n     * Dispatches to the `forEach` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @see R.addIndex\n     * @example\n     *\n     *      var printXPlusFive = x => console.log(x + 5);\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      // logs 6\n     *      // logs 7\n     *      // logs 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Creates a new object from a list key-value pairs. If a key appears in\n     * multiple pairs, the rightmost pair is included in the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs, R.pair\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var result = {};\n        var idx = 0;\n        while (idx < pairs.length) {\n            result[pairs[idx][0]] = pairs[idx][1];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and returns a list of lists where each sublist's elements are\n     * all \"equal\" according to the provided equality function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.21.0\n     * @category List\n     * @sig ((a, a) → Boolean) → [a] → [[a]]\n     * @param {Function} fn Function for determining whether two given (adjacent)\n     *        elements should be in the same group\n     * @param {Array} list The array to group. Also accepts a string, which will be\n     *        treated as a list of characters.\n     * @return {List} A list that contains sublists of equal elements,\n     *         whose concatenations are equal to the original list.\n     * @example\n     *\n     * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n     *\n     * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n     *\n     * R.groupWith(R.eqBy(isVowel), 'aestiou')\n     * //=> ['ae', 'st', 'iou']\n     */\n    var groupWith = _curry2(function (fn, list) {\n        var res = [];\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            var nextidx = idx + 1;\n            while (nextidx < len && fn(list[idx], list[nextidx])) {\n                nextidx += 1;\n            }\n            res.push(list.slice(idx, nextidx));\n            idx = nextidx;\n        }\n        return res;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has a property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good\n     * as a default or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse`\n     * function depending upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @see R.unless, R.when\n     * @example\n     *\n     *      var incCount = R.ifElse(\n     *        R.has('count'),\n     *        R.over(R.lensProp('count'), R.inc),\n     *        R.assoc('count', 1)\n     *      );\n     *      incCount({});           //=> { count: 1 }\n     *      incCount({ count: 1 }); //=> { count: 2 }\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`. _Note that\n     * this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n     * destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * Dispatches to the `intersperse` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor. This\n     * function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (_isString(x)) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own properties of\n     * the supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    // Safari bug\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        // Safari bug\n        var hasArgsEnumBug = function () {\n            'use strict';\n            return arguments.propertyIsEnumerable('length');\n        }();\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, nIdx;\n            var ks = [];\n            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n            for (prop in obj) {\n                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the properties of the supplied\n     * object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop;\n        var ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && _isNumber(list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from left to right, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var appender = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from right to left, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1;\n        var result = [];\n        var tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function will\n     * return an empty array when there are no matches. This differs from\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @see R.test\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.maxBy(square, -3, 2); //=> -3\n     *\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of the first object merged with\n     * the own properties of the second object. If a key exists in both objects,\n     * the value from the second object will be used.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.mergeWith, R.mergeWithKey\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(l, r) {\n        return _assign({}, l, r);\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return _assign.apply(null, [{}].concat(list));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the key\n     * and the values associated with the key in each object, with the result being\n     * used as the value associated with the key in the returned object. The key\n     * will be excluded from the returned object if the resulting value is\n     * `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWith\n     * @example\n     *\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n     *      R.mergeWithKey(concatValues,\n     *                     { a: true, thing: 'foo', values: [10, 20] },\n     *                     { b: true, thing: 'bar', values: [15, 35] });\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n     */\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n        var result = {};\n        var k;\n        for (k in l) {\n            if (_has(k, l)) {\n                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n            }\n        }\n        for (k in r) {\n            if (_has(k, r) && !_has(k, result)) {\n                result[k] = r[k];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.minBy(square, -3, 2); //=> 2\n     *\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the first parameter by the second and returns the remainder. Note\n     * that this function preserves the JavaScript-style behavior for modulo. For\n     * mathematical modulo see `mathMod`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = (a, b) => [a, b];\n     *\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); //=> true\n     *      R.not(1); //=> false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string. If n is negative the\n     * element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth(2, 'abc'); //=> 'c'\n     *      R.nth(3, 'abc'); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        var arity = n < 0 ? 1 : n + 1;\n        return curryN(arity, function () {\n            return nth(n, arguments);\n        });\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @see R.pair\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.objOf('must'),\n     *        R.map(R.objOf('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var objOf = _curry2(function objOf(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(_of);\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of\n     * `fn` such that `fn` can only ever be called once, no matter how many times\n     * the returned function is invoked. The first value calculated is returned in\n     * subsequent invocations.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(x => x + 1);\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false;\n        var result;\n        return _arity(fn.length, function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        });\n    });\n\n    /**\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n     * if both arguments are `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n     * @see R.either\n     * @example\n     *\n     *      R.or(true, true); //=> true\n     *      R.or(true, false); //=> true\n     *      R.or(false, true); //=> true\n     *      R.or(false, false); //=> false\n     */\n    var or = _curry2(function or(a, b) {\n        return a || b;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the result of applying the given function to\n     * the focused value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    // `Identity` is a functor that holds a single value, where `map` simply\n    // transforms the held value with the provided function.\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    var over = function () {\n        // `Identity` is a functor that holds a single value, where `map` simply\n        // transforms the held value with the provided function.\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            // The value returned by the getter function is first transformed with `f`,\n            // then set as the value of an `Identity`. This is then mapped over with the\n            // setter function of the lens.\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig a -> b -> (a,b)\n     * @param {*} fst\n     * @param {*} snd\n     * @return {Array}\n     * @see R.objOf, R.of\n     * @example\n     *\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n     */\n    var pair = _curry2(function pair(fst, snd) {\n        return [\n            fst,\n            snd\n        ];\n    });\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path`.\n     * @see R.prop\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        var val = obj;\n        var idx = 0;\n        while (idx < paths.length) {\n            if (val == null) {\n                return;\n            }\n            val = val[paths[idx]];\n            idx += 1;\n        }\n        return val;\n    });\n\n    /**\n     * If the given, non-null object has a value at the given path, returns the\n     * value at that path. Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig a -> [String] -> Object -> a\n     * @param {*} d The default value.\n     * @param {Array} p The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path` of the supplied object or the default value.\n     * @example\n     *\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n     */\n    var pathOr = _curry3(function pathOr(d, p, obj) {\n        return defaultTo(d, path(p, obj));\n    });\n\n    /**\n     * Returns `true` if the specified object property at given path satisfies the\n     * given predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Logic\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n     * @param {Function} pred\n     * @param {Array} propPath\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propSatisfies, R.path\n     * @example\n     *\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n     */\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n        return propPath.length > 0 && pred(path(propPath, obj));\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified. If\n     * the key does not exist, the property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit, R.props\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\n     * properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that satisfy\n     * the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick, R.filter\n     * @example\n     *\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the\n     * contents of the list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated\n     * property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @see R.path\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is, R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return is(type, obj[name]);\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property. Otherwise returns the provided default\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq, R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the reduce\n     * and transduce functions. The returned value should be considered a black\n     * box: the internal structure is not guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above. For instance, it is not currently supported by reduceRight.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category List\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @see R.reduce, R.transduce\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\n     * the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list or string with the elements or characters in reverse\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {Array|String}\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     *\n     *      R.reverse('abc');      //=> 'cba'\n     *      R.reverse('ab');       //=> 'ba'\n     *      R.reverse('a');        //=> 'a'\n     *      R.reverse('');         //=> ''\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values\n     * from the left\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * Dispatches to the `slice` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function,\n     * which should accept two values at a time and return a negative number if the\n     * first value is smaller, a positive number if it's larger, and zero if they\n     * are equal. Please note that this is a **copy** of the list. It does not\n     * modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Splits a given list or string at a given index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig Number -> [a] -> [[a], [a]]\n     * @sig Number -> String -> [String, String]\n     * @param {Number} index The index where the array/string is split.\n     * @param {Array|String} array The array/string to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n     */\n    var splitAt = _curry2(function splitAt(index, array) {\n        return [\n            slice(0, index, array),\n            slice(index, length(array), array)\n        ];\n    });\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\n     *\n     *  - the result of concatenating the two output lists is equivalent to the input list;\n     *  - none of the elements of the first output list satisfies the predicate; and\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n     * @param {Function} pred The predicate that determines where the array is split.\n     * @param {Array} list The array to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n     */\n    var splitWhen = _curry2(function splitWhen(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var prefix = [];\n        while (idx < len && !pred(list[idx])) {\n            prefix.push(list[idx]);\n            idx += 1;\n        }\n        return [\n            prefix,\n            _slice(list, idx)\n        ];\n    });\n\n    /**\n     * Subtracts its second argument from its first argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return Number(a) - Number(b);\n    });\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * Dispatches to the `slice` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.head, R.init, R.last\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * Dispatches to the `take` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, and terminating when the\n     * predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile, R.addIndex\n     * @example\n     *\n     *      var isNotOne = x => x !== 1;\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list,\n     * passing each value to the supplied predicate function, and terminating when\n     * the predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * Dispatches to the `takeWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isNotFour = x => x !== 4;\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = x => console.log('x is ' + x);\n     *      R.tap(sayX, 100); //=> 100\n     *      // logs 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results\n     * of those function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n     * and is gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.3\n     * @category List\n     * @sig (Number -> a) -> Number -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var idx = 0;\n        var list;\n        if (len < 0 || isNaN(len)) {\n            throw new RangeError('n must be a non-negative number');\n        }\n        list = new Array(len);\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. Only the object's\n     * own properties are used.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. The object's own\n     * properties and prototype properties are used. Note that the order of the\n     * output array is not guaranteed to be consistent across different JS\n     * platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Transposes the rows and columns of a 2D list.\n     * When passed a list of `n` lists of length `x`,\n     * returns a list of `x` lists of length `n`.\n     *\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [[a]] -> [[a]]\n     * @param {Array} list A 2D list\n     * @return {Array} A 2D list\n     * @example\n     *\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     *\n     * If some of the rows are shorter than the following rows, their elements are skipped:\n     *\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n     */\n    var transpose = _curry1(function transpose(outerlist) {\n        var i = 0;\n        var result = [];\n        while (i < outerlist.length) {\n            var innerlist = outerlist[i];\n            var j = 0;\n            while (j < innerlist.length) {\n                if (typeof result[j] === 'undefined') {\n                    result[j] = [];\n                }\n                result[j].push(innerlist[j]);\n                j += 1;\n            }\n            i += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n     * function evaluates the `tryer`; if it does not throw, it simply returns the\n     * result. If the `tryer` *does* throw, the returned function evaluates the\n     * `catcher` function and returns its result. Note that for effective\n     * composition with this function, both the `tryer` and `catcher` functions\n     * must return the same type of results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n     * @param {Function} tryer The function that may throw.\n     * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n     * @return {Function} A new function that will catch exceptions and send then to the catcher.\n     * @example\n     *\n     *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n     *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n     */\n    var tryCatch = _curry2(function _tryCatch(tryer, catcher) {\n        return _arity(tryer.length, function () {\n            try {\n                return tryer.apply(this, arguments);\n            } catch (e) {\n                return catcher.apply(this, _concat([e], arguments));\n            }\n        });\n    });\n\n    /**\n     * Gives a single-word string description of the (native) type of a value,\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n     * attempt to distinguish user Object types any further, reporting them all as\n     * 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns a\n     * function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function which\n     * takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = a => b => c => d => a + b + c + d;\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns\n     * either false to stop iteration or an array of length 2 containing the value\n     * to add to the resulting list and the seed to be used in the next call to the\n     * iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = n => n > 50 ? false : [-n, n + 10];\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied predicate to\n     * two list elements. Prefers the first item if two items compare equal based\n     * on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = R.eqBy(String);\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is not satisfied, the function will return the result of\n     * calling the `whenFalseFn` function with the same argument. If the predicate\n     * is satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred        A predicate function\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n     *                               to a falsy value.\n     * @param {*}        x           An object to test with the `pred` function and\n     *                               pass to `whenFalseFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n     * @see R.ifElse, R.when\n     * @example\n     *\n     *      // coerceArray :: (a|[a]) -> [a]\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n     *      coerceArray(1);         //=> [1]\n     */\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n        return pred(x) ? x : whenFalseFn(x);\n    });\n\n    /**\n     * Takes a predicate, a transformation function, and an initial value,\n     * and returns a value of the same type as the initial value.\n     * It does so by applying the transformation until the predicate is satisfied,\n     * at which point it returns the satisfactory value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred A predicate function\n     * @param {Function} fn The iterator function\n     * @param {*} init Initial value\n     * @return {*} Final value that satisfies predicate\n     * @example\n     *\n     *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n     */\n    var until = _curry3(function until(pred, fn, init) {\n        var val = init;\n        while (!pred(val)) {\n            val = fn(val);\n        }\n        return val;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the provided index\n     * replaced with the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @see R.adjust\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Accepts a function `fn` and a list of transformer functions and returns a\n     * new curried function. When the new function is invoked, it calls the\n     * function `fn` with parameters consisting of the result of calling each\n     * supplied handler on successive arguments to the new function.\n     *\n     * If more arguments are passed to the returned function than transformer\n     * functions, those arguments are passed directly to `fn` as additional\n     * parameters. If you expect additional arguments that don't need to be\n     * transformed, although you can ignore them, it's best to pass an identity\n     * function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {Array} transformers A list of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n     */\n    var useWith = _curry2(function useWith(fn, transformers) {\n        return curryN(transformers.length, function () {\n            var args = [];\n            var idx = 0;\n            while (idx < transformers.length) {\n                args.push(transformers[idx].call(this, arguments[idx]));\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n        });\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across different\n     * JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties, of the\n     * supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop;\n        var vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    // `Const` is a functor that effectively ignores the function given to `map`.\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    var view = function () {\n        // `Const` is a functor that effectively ignores the function given to `map`.\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            // Using `Const` effectively ignores the setter function of the `lens`,\n            // leaving the value returned by the getter function unmodified.\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is satisfied, the function will return the result of calling\n     * the `whenTrueFn` function with the same argument. If the predicate is not\n     * satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred       A predicate function\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\n     *                              evaluates to a truthy value.\n     * @param {*}        x          An object to test with the `pred` function and\n     *                              pass to `whenTrueFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n     * @see R.ifElse, R.unless\n     * @example\n     *\n     *      // truncate :: String -> String\n     *      var truncate = R.when(\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n     *      );\n     *      truncate('12345');         //=> '12345'\n     *      truncate('0123456789ABC'); //=> '0123456789…'\n     */\n    var when = _curry3(function when(pred, whenTrueFn, x) {\n        return pred(x) ? whenTrueFn(x) : x;\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of the\n     * test object. `where` returns true if all the predicates return true, false\n     * otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = where({\n     *        a: equals('foo'),\n     *        b: complement(equals('bar')),\n     *        x: gt(__, 10),\n     *        y: lt(__, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the\n     * parameters, or do other processing either before the internal function is\n     * called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @deprecated since v0.22.0\n     * @example\n     *\n     *      var greet = name => 'Hello ' + name;\n     *\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n     *\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible pair\n     * from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up equally-positioned\n     * items from both lists. The returned list is truncated to the length of the\n     * shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     * Key/value pairing is truncated to the length of the shorter of the two lists.\n     * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0;\n        var len = Math.min(keys.length, values.length);\n        var out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to each\n     * equally-positioned pair in the lists. The returned list is truncated to the\n     * length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = (x, y) => {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @param {Boolean} deep Whether or not to perform deep cloning.\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo, deep) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value.valueOf());\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return _curry2(function (fn, args) {\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        });\n    };\n\n    var _dropLast = function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    };\n\n    // Values of other types are only equal if identical.\n    var _equals = function _equals(a, b, stackA, stackB) {\n        if (identical(a, b)) {\n            return true;\n        }\n        if (type(a) !== type(b)) {\n            return false;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n        }\n        switch (type(a)) {\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n            if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n                return a === b;\n            }\n            break;\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n                return false;\n            }\n            break;\n        case 'Date':\n            if (!identical(a.valueOf(), b.valueOf())) {\n                return false;\n            }\n            break;\n        case 'Error':\n            return a.name === b.name && a.message === b.message;\n        case 'RegExp':\n            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n                return false;\n            }\n            break;\n        case 'Map':\n        case 'Set':\n            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n                return false;\n            }\n            break;\n        case 'Int8Array':\n        case 'Uint8Array':\n        case 'Uint8ClampedArray':\n        case 'Int16Array':\n        case 'Uint16Array':\n        case 'Int32Array':\n        case 'Uint32Array':\n        case 'Float32Array':\n        case 'Float64Array':\n            break;\n        case 'ArrayBuffer':\n            break;\n        default:\n            // Values of other types are only equal if identical.\n            return false;\n        }\n        var keysA = keys(a);\n        if (keysA.length !== keys(b).length) {\n            return false;\n        }\n        var idx = stackA.length - 1;\n        while (idx >= 0) {\n            if (stackA[idx] === a) {\n                return stackB[idx] === b;\n            }\n            idx -= 1;\n        }\n        stackA.push(a);\n        stackB.push(b);\n        idx = keysA.length - 1;\n        while (idx >= 0) {\n            var key = keysA[idx];\n            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n                return false;\n            }\n            idx -= 1;\n        }\n        stackA.pop();\n        stackB.pop();\n        return true;\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n     * function based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, jlen, j;\n            var result = [];\n            var idx = 0;\n            var ilen = list.length;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0;\n            var len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                xs.push(x);\n                return xs;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xdropLastWhile = function () {\n        function XDropLastWhile(fn, xf) {\n            this.f = fn;\n            this.retained = [];\n            this.xf = xf;\n        }\n        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n            this.retained = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n        };\n        XDropLastWhile.prototype.flush = function (result, input) {\n            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n            this.retained = [];\n            return this.xf['@@transducer/step'](result, input);\n        };\n        XDropLastWhile.prototype.retain = function (result, input) {\n            this.retained.push(input);\n            return result;\n        };\n        return _curry2(function _xdropLastWhile(fn, xf) {\n            return new XDropLastWhile(fn, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new\n     * parameters to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that\n     * more closely resembles `Array.prototype.map`. Note that this will only work\n     * for functions in which the iteration callback function is the first\n     * parameter, and where the list is the last parameter. (This latter might be\n     * unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n     * copied, but assigned by their reference.\n     *\n     * Dispatches to a `clone` method if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried function\n     * has two unusual capabilities. First, its arguments needn't be provided one\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * Dispatches to the `drop` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take, R.transduce\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\n    /**\n     * Returns a new list excluding all the tailing elements of a given list which\n     * satisfy the supplied predicate function. It passes each value from the right\n     * to the supplied predicate function, skipping elements while the predicate\n     * function returns `true`. The predicate function is applied to one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile, R.addIndex\n     * @example\n     *\n     *      var lteThree = x => x <= 3;\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n     */\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n     * cyclical data structures.\n     *\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\n     * present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _equals(a, b, [], []);\n    });\n\n    /**\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n     * same type containing the members of the given filterable which satisfy the\n     * given predicate.\n     *\n     * Dispatches to the `filter` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.reject, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    // else\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n        return _isObject(filterable) ? _reduce(function (acc, key) {\n            if (pred(filterable[key])) {\n                acc[key] = filterable[key];\n            }\n            return acc;\n        }, {}, keys(filterable)) : // else\n        _filter(pred, filterable);\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n     * and putting them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two\n     * arguments' order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {*}\n     * @see R.tail, R.init, R.last\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.last, R.head, R.tail\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @return {Array} A new list containing those elements common to both lists.\n     * @see R.intersection\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        var results = [];\n        var idx = 0;\n        while (idx < filteredList.length) {\n            if (_containsWith(pred, filteredList[idx], lookupList)) {\n                results[results.length] = filteredList[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Transforms the items of the list with the transducer and appends the\n     * transformed items to the accumulator using an appropriate iterator function\n     * based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated\n     * items will be appended to arrays and concatenated to strings. Objects will\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity\n     * reducing iterator function, step, 0-arity initial value function, init, and\n     * 1-arity result extraction function result. The step function is used as the\n     * iterator function in reduce. The result function is used to convert the\n     * final accumulator into the return type and in most cases is R.identity. The\n     * init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects with duplicate values\n     * by putting the values into an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object as values, and the\n     * values of the given object, which are coerced to strings, as keys. Note\n     * that the last key found is preferred when handling the same value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the given value is its type's empty value; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig a -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @see R.empty\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty({});          //=> true\n     *      R.isEmpty({length: 0}); //=> false\n     */\n    var isEmpty = _curry1(function isEmpty(x) {\n        return x != null && equals(x, empty(x));\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.init, R.head, R.tail\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in an array, or -1 if\n     * the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Takes a function and\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n     * applies the function to each of the functor's values, and returns\n     * a functor of the same shape.\n     *\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n     *\n     * Dispatches to the `map` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * Also treats functions as functors and will compose them together.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Functor f => (a -> b) -> f a -> f b\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @see R.transduce, R.addIndex\n     * @example\n     *\n     *      var double = x => x * 2;\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     *\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n     */\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n        switch (Object.prototype.toString.call(functor)) {\n        case '[object Function]':\n            return curryN(functor.length, function () {\n                return fn.call(this, functor.apply(this, arguments));\n            });\n        case '[object Object]':\n            return _reduce(function (acc, key) {\n                acc[key] = fn(functor[key]);\n                return acc;\n            }, {}, keys(functor));\n        default:\n            return _map(fn, functor);\n        }\n    }));\n\n    /**\n     * An Object-specific version of `map`. The function is applied to three\n     * arguments: *(value, key, obj)*. If only the value is significant, use\n     * `map` instead.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig ((*, String, Object) -> *) -> Object -> Object\n     * @param {Function} fn\n     * @param {Object} obj\n     * @return {Object}\n     * @see R.map\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the values\n     * associated with the key in each object, with the result being used as the\n     * value associated with the key in the returned object. The key will be\n     * excluded from the returned object if the resulting value is `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWithKey\n     * @example\n     *\n     *      R.mergeWith(R.concat,\n     *                  { a: true, values: [10, 20] },\n     *                  { b: true, values: [15, 35] });\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n     */\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n        return mergeWithKey(function (_, _l, _r) {\n            return fn(_l, _r);\n        }, l, r);\n    });\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided initially followed by the arguments provided to `g`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partialRight\n     * @example\n     *\n     *      var multiply = (a, b) => a * b;\n     *      var double = R.partial(multiply, [2]);\n     *      double(2); //=> 4\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var sayHello = R.partial(greet, ['Hello']);\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = _createPartialApplicator(_concat);\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided to `g` followed by the arguments provided initially.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partial\n     * @example\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = _createPartialApplicator(flip(_concat));\n\n    /**\n     * Determines whether a nested path on an object has a specific value, in\n     * `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in\n     * the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @see R.props\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, [\n        pickAll,\n        identity\n    ]);\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return equals(val, obj[name]);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It may use\n     * `R.reduced` to shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * Dispatches to the `reduce` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduced, R.addIndex\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var plus = (a, b) => a + b;\n     *\n     *      R.reduce(plus, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Groups the elements of the list according to the result of calling\n     * the String-returning function `keyFn` on each element and reduces the elements\n     * of each group to a single value via the reducer function `valueFn`.\n     *\n     * This function is basically a more general `groupBy` function.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n     * @param {Function} valueFn The function that reduces the elements of each group to a single\n     *        value. Receives two values, accumulator for a particular group and the current element.\n     * @param {*} acc The (initial) accumulator value for each group.\n     * @param {Function} keyFn The function that maps the list's element into a key.\n     * @param {Array} list The array to group.\n     * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n     *         `valueFn` for elements which produced that key when passed to `keyFn`.\n     * @see R.groupBy, R.reduce\n     * @example\n     *\n     *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n     *      var namesByGrade = reduceToNamesBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Lucy', score: 92},\n     *                      {name: 'Drew', score: 85},\n     *                      // ...\n     *                      {name: 'Bart', score: 62}];\n     *      namesByGrade(students);\n     *      // {\n     *      //   'A': ['Lucy'],\n     *      //   'B': ['Drew']\n     *      //   // ...,\n     *      //   'F': ['Bart']\n     *      // }\n     */\n    var reduceBy = _curryN(4, [], _dispatchable('reduceBy', _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n        return _reduce(function (acc, elt) {\n            var key = keyFn(elt);\n            acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Like `reduce`, `reduceWhile` returns a single item by iterating through\n     * the list, successively calling the iterator function. `reduceWhile` also\n     * takes a predicate that is evaluated before each step. If the predicate returns\n     * `false`, it \"short-circuits\" the iteration and returns the current value\n     * of the accumulator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.22.0\n     * @category List\n     * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} pred The predicate. It is passed the accumulator and the\n     *        current element.\n     * @param {Function} fn The iterator function. Receives two values, the\n     *        accumulator and the current element.\n     * @param {*} a The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced\n     * @example\n     *\n     *      var isOdd = (acc, x) => x % 2 === 1;\n     *      var xs = [1, 3, 5, 60, 777, 800];\n     *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n     *\n     *      var ys = [2, 4, 6]\n     *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n     */\n    var reduceWhile = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n        return _reduce(function (acc, x) {\n            return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n        }, a, list);\n    });\n\n    /**\n     * The complement of `filter`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.filter, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isOdd = (n) => n % 2 === 1;\n     *\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    var reject = _curry2(function reject(pred, filterable) {\n        return filter(_complement(pred), filterable);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single\n     * item by iterating through the list, successively calling the transformed\n     * iterator function and passing it an accumulator value and the current value\n     * from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be\n     * wrapped as a transformer to initialize the transducer. A transformer can be\n     * passed directly in place of an iterator function. In both cases, iteration\n     * may be stopped early with the `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a\n     * transformer and can be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result\n     * extraction function, result. The step function is used as the iterator\n     * function in reduce. The result function is used to convert the final\n     * accumulator into the return type and in most cases is R.identity. The init\n     * function can be used to provide an initial accumulator, but is ignored by\n     * transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced, R.into\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list. Duplication is determined according to the value returned by\n     * applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(map(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    // Array.prototype.indexOf doesn't exist below IE9\n    // manually crawl the list to distinguish between +0 and -0\n    // NaN\n    // non-zero numbers can utilise Set\n    // all these types can utilise Set\n    // null can utilise Set\n    // anything else not covered above, defer to R.equals\n    var _indexOf = function _indexOf(list, a, idx) {\n        var inf, item;\n        // Array.prototype.indexOf doesn't exist below IE9\n        if (typeof list.indexOf === 'function') {\n            switch (typeof a) {\n            case 'number':\n                if (a === 0) {\n                    // manually crawl the list to distinguish between +0 and -0\n                    inf = 1 / a;\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (item === 0 && 1 / item === inf) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                } else if (a !== a) {\n                    // NaN\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (typeof item === 'number' && item !== item) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                }\n                // non-zero numbers can utilise Set\n                return list.indexOf(a, idx);\n            // all these types can utilise Set\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                return list.indexOf(a, idx);\n            case 'object':\n                if (a === null) {\n                    // null can utilise Set\n                    return list.indexOf(a, idx);\n                }\n            }\n        }\n        // anything else not covered above, defer to R.equals\n        while (idx < list.length) {\n            if (equals(list[idx], a)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if every one of the provided predicates is satisfied\n     * by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.anyPass\n     * @example\n     *\n     *      var isQueen = R.propEq('rank', 'Q');\n     *      var isSpade = R.propEq('suit', '♠︎');\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n     *\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n     */\n    var allPass = _curry1(function allPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (!preds[idx].apply(this, arguments)) {\n                    return false;\n                }\n                idx += 1;\n            }\n            return true;\n        });\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if at least one of the provided predicates is\n     * satisfied by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.allPass\n     * @example\n     *\n     *      var gte = R.anyPass([R.gt, R.equals]);\n     *\n     *      gte(3, 2); //=> true\n     *      gte(2, 2); //=> true\n     *      gte(2, 3); //=> false\n     */\n    var anyPass = _curry1(function anyPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (preds[idx].apply(this, arguments)) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        });\n    });\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * Dispatches to the `ap` method of the second argument, if present. Also\n     * treats curried functions as applicatives.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig [a -> b] -> [a] -> [b]\n     * @sig Apply f => f (a -> b) -> f a -> f b\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    // else\n    var ap = _curry2(function ap(applicative, fn) {\n        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {\n            return applicative(x)(fn(x));\n        } : // else\n        _reduce(function (acc, f) {\n            return _concat(acc, map(f, fn));\n        }, [], applicative);\n    });\n\n    /**\n     * Given a spec object recursively mapping properties to functions, creates a\n     * function producing an object of the same structure, by mapping each property\n     * to the result of calling its associated function with the supplied arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n     * @param {Object} spec an object recursively mapping properties to functions for\n     *        producing the values for these properties.\n     * @return {Function} A function that returns an object of the same structure\n     * as `spec', with each property set to the value returned by calling its\n     * associated function with the supplied arguments.\n     * @see R.converge, R.juxt\n     * @example\n     *\n     *      var getMetrics = R.applySpec({\n     *                                      sum: R.add,\n     *                                      nested: { mul: R.multiply }\n     *                                   });\n     *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n     */\n    var applySpec = _curry1(function applySpec(spec) {\n        spec = map(function (v) {\n            return typeof v == 'function' ? v : applySpec(v);\n        }, spec);\n        return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n            var args = arguments;\n            return map(function (f) {\n                return apply(f, args);\n            }, spec);\n        });\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right branch\n     * produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call, [\n     *                                  R.pipe(R.prop('indent'), indentN),\n     *                                  R.prop('value')\n     *                              ]);\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results. `chain`\n     * is also known as `flatMap` in some libraries\n     *\n     * Dispatches to the `chain` method of the second argument, if present,\n     * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain m => (a -> m b) -> m a -> m b\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = n => [n, n];\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n        if (typeof monad === 'function') {\n            return function () {\n                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n            };\n        }\n        return _makeFlat(false)(map(fn, monad));\n    }));\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n     * to `fn` are applied to each of the predicates in turn until one returns a\n     * \"truthy\" value, at which point `fn` returns the result of applying its\n     * arguments to the corresponding transformer. If none of the predicates\n     * matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        var arity = reduce(max, 0, map(function (pair) {\n            return pair[0].length;\n        }, pairs));\n        return _arity(arity, function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        });\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type. The arity of the function\n     * returned is specified to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = () => {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts a converging function and a list of branching functions and returns\n     * a new function. When invoked, this new function is applied to some\n     * arguments, each branching function is applied to those same arguments. The\n     * results of each branching function are passed as arguments to the converging\n     * function to produce the return value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.2\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {Array} functions A list of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = (a, b) => a + b;\n     *      var multiply = (a, b) => a * b;\n     *      var subtract = (a, b) => a - b;\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n     *\n     *      var add3 = (a, b, c) => a + b + c;\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n     */\n    var converge = _curry2(function converge(after, fns) {\n        return curryN(reduce(max, 0, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Counts the elements of a list according to how many match each value of a\n     * key generated by the supplied function. Returns an object mapping the keys\n     * produced by `fn` to the number of occurrences in the list. Note that all\n     * keys are coerced to strings because of how JavaScript objects work.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = reduceBy(function (acc, elem) {\n        return acc + 1;\n    }, 0);\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements. The\n     * first element in a series of equal element is the one being preserved.\n     *\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Takes a function and two values in its domain and returns `true` if the\n     * values map to the same value in the codomain; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Relation\n     * @sig (a -> b) -> a -> a -> Boolean\n     * @param {Function} f\n     * @param {*} x\n     * @param {*} y\n     * @return {Boolean}\n     * @example\n     *\n     *      R.eqBy(Math.abs, 5, -5); //=> true\n     */\n    var eqBy = _curry3(function eqBy(f, x, y) {\n        return equals(f(x), f(y));\n    });\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms, for\n     * the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of\n     * calling a String-returning function on each element, and grouping the\n     * results according to values returned.\n     *\n     * Dispatches to the `groupBy` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @see R.transduce\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {\n        if (acc == null) {\n            acc = [];\n        }\n        acc.push(item);\n        return acc;\n    }, null)));\n\n    /**\n     * Given a function that generates a key, turns a list of objects into an\n     * object indexing the objects by the given key. Note that if multiple\n     * objects generate the same value for the indexing key only the last value\n     * will be included in the generated object.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} array The array of objects to index\n     * @return {Object} An object indexing each array element by the given property.\n     * @example\n     *\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n     *      R.indexBy(R.prop('id'), list);\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n     */\n    var indexBy = reduceBy(function (acc, elem) {\n        return elem;\n    }, null);\n\n    /**\n     * Returns the position of the first occurrence of an item in an array, or -1\n     * if the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * juxt applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Function\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n     * @param {Array} fns An array of functions\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n     * @see R.applySpec\n     * @example\n     *\n     *      var getRange = R.juxt([Math.min, Math.max]);\n     *      getRange(3, 4, 9, -3); //=> [-3, 9]\n     */\n    var juxt = _curry1(function juxt(fns) {\n        return converge(_arrayOf, fns);\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (toFunctorFn) {\n            return function (target) {\n                return map(function (focus) {\n                    return setter(focus, target);\n                }, toFunctorFn(getter(target)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig [String] -> Lens s a\n     * @param {Array} path The path to use.\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xyLens = R.lensPath(['x', 'y']);\n     *\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n     */\n    var lensPath = _curry1(function lensPath(p) {\n        return lens(path(p), assocPath(p));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n     * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.lift, R.ap\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Takes a predicate and a list or other \"filterable\" object and returns the\n     * pair of filterable objects of the same type of elements which do and do not\n     * satisfy, the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n     * @param {Function} pred A predicate to determine which side the element belongs to.\n     * @param {Array} filterable the list (or other filterable) to partition.\n     * @return {Array} An array, containing first the subset of elements that satisfy the\n     *         predicate, and second the subset of elements that do not satisfy.\n     * @see R.filter, R.reject\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     *\n     *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n     *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n     */\n    var partition = juxt([\n        filter,\n        reject\n    ]);\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * **Note:** The result of pipe is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining functions\n     * must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n     * Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n     * @param {Function} of\n     * @param {*} traversable\n     * @return {*}\n     * @see R.traverse\n     * @example\n     *\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n     */\n    var sequence = _curry2(function sequence(of, traversable) {\n        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n            return ap(map(prepend, x), acc);\n        }, of([]), traversable);\n    });\n\n    /**\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n     * into an Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n     * @param {Function} of\n     * @param {Function} f\n     * @param {*} traversable\n     * @return {*}\n     * @see R.sequence\n     * @example\n     *\n     *      // Returns `Nothing` if the given divisor is `0`\n     *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n     *\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n     */\n    var traverse = _curry3(function traverse(of, f, traversable) {\n        return sequence(of, map(f, traversable));\n    });\n\n    /**\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain c => c (c a) -> c a\n     * @param {*} list\n     * @return {*}\n     * @see R.flatten, R.chain\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = chain(_identity);\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n                return /^\\d+$/.test(k);\n            }, keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            if (typeof x.toString === 'function') {\n                var repr = x.toString();\n                if (repr !== '[object Object]') {\n                    return repr;\n                }\n            }\n            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * **Note:** The result of compose is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.pipeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return compose.apply(this, prepend(identity, map(chain, arguments)));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = config => {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n     * least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     * @see R.any\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. `R.equals`\n     * is used to determine equality.\n     *\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.liftN\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n     *\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n     *\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.composeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Returns a new list without values in the first argument.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The values to be removed from `list2`.\n     * @param {Array} list2 The array to remove values from.\n     * @return {Array} The new array without values in `list1`.\n     * @see R.transduce\n     * @example\n     *\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n     */\n    var without = _curry2(function (xs, list) {\n        return reject(flip(_contains)(xs), list);\n    });\n\n    // A simple Set type that honours R.equals semantics\n    /* globals Set */\n    // until we figure out why jsdoc chokes on this\n    // @param item The item to add to the Set\n    // @returns {boolean} true if the item did not exist prior, otherwise false\n    //\n    //\n    // @param item The item to check for existence in the Set\n    // @returns {boolean} true if the item exists in the Set, otherwise false\n    //\n    //\n    // Combines the logic for checking whether an item is a member of the set and\n    // for adding a new item to the set.\n    //\n    // @param item       The item to check or add to the Set instance.\n    // @param shouldAdd  If true, the item will be added to the set if it doesn't\n    //                   already exist.\n    // @param set        The set instance to check or add to.\n    // @return {boolean} true if the item already existed, otherwise false.\n    //\n    // distinguish between +0 and -0\n    // these types can all utilise the native Set\n    // set._items['boolean'] holds a two element array\n    // representing [ falseExists, trueExists ]\n    // compare functions for reference equality\n    /* falls through */\n    // reduce the search size of heterogeneous sets by creating buckets\n    // for each type.\n    // scan through all previously applied items\n    var _Set = function () {\n        function _Set() {\n            /* globals Set */\n            this._nativeSet = typeof Set === 'function' ? new Set() : null;\n            this._items = {};\n        }\n        // until we figure out why jsdoc chokes on this\n        // @param item The item to add to the Set\n        // @returns {boolean} true if the item did not exist prior, otherwise false\n        //\n        _Set.prototype.add = function (item) {\n            return !hasOrAdd(item, true, this);\n        };\n        //\n        // @param item The item to check for existence in the Set\n        // @returns {boolean} true if the item exists in the Set, otherwise false\n        //\n        _Set.prototype.has = function (item) {\n            return hasOrAdd(item, false, this);\n        };\n        //\n        // Combines the logic for checking whether an item is a member of the set and\n        // for adding a new item to the set.\n        //\n        // @param item       The item to check or add to the Set instance.\n        // @param shouldAdd  If true, the item will be added to the set if it doesn't\n        //                   already exist.\n        // @param set        The set instance to check or add to.\n        // @return {boolean} true if the item already existed, otherwise false.\n        //\n        function hasOrAdd(item, shouldAdd, set) {\n            var type = typeof item;\n            var prevSize, newSize;\n            switch (type) {\n            case 'string':\n            case 'number':\n                // distinguish between +0 and -0\n                if (item === 0 && 1 / item === -Infinity) {\n                    if (set._items['-0']) {\n                        return true;\n                    } else {\n                        if (shouldAdd) {\n                            set._items['-0'] = true;\n                        }\n                        return false;\n                    }\n                }\n                // these types can all utilise the native Set\n                if (set._nativeSet !== null) {\n                    if (shouldAdd) {\n                        prevSize = set._nativeSet.size;\n                        set._nativeSet.add(item);\n                        newSize = set._nativeSet.size;\n                        return newSize === prevSize;\n                    } else {\n                        return set._nativeSet.has(item);\n                    }\n                } else {\n                    if (!(type in set._items)) {\n                        if (shouldAdd) {\n                            set._items[type] = {};\n                            set._items[type][item] = true;\n                        }\n                        return false;\n                    } else if (item in set._items[type]) {\n                        return true;\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type][item] = true;\n                        }\n                        return false;\n                    }\n                }\n            case 'boolean':\n                // set._items['boolean'] holds a two element array\n                // representing [ falseExists, trueExists ]\n                if (type in set._items) {\n                    var bIdx = item ? 1 : 0;\n                    if (set._items[type][bIdx]) {\n                        return true;\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type][bIdx] = true;\n                        }\n                        return false;\n                    }\n                } else {\n                    if (shouldAdd) {\n                        set._items[type] = item ? [\n                            false,\n                            true\n                        ] : [\n                            true,\n                            false\n                        ];\n                    }\n                    return false;\n                }\n            case 'function':\n                // compare functions for reference equality\n                if (set._nativeSet !== null) {\n                    if (shouldAdd) {\n                        prevSize = set._nativeSet.size;\n                        set._nativeSet.add(item);\n                        newSize = set._nativeSet.size;\n                        return newSize > prevSize;\n                    } else {\n                        return set._nativeSet.has(item);\n                    }\n                } else {\n                    if (!(type in set._items)) {\n                        if (shouldAdd) {\n                            set._items[type] = [item];\n                        }\n                        return false;\n                    }\n                    if (!_contains(item, set._items[type])) {\n                        if (shouldAdd) {\n                            set._items[type].push(item);\n                        }\n                        return false;\n                    }\n                    return true;\n                }\n            case 'undefined':\n                if (set._items[type]) {\n                    return true;\n                } else {\n                    if (shouldAdd) {\n                        set._items[type] = true;\n                    }\n                    return false;\n                }\n            case 'object':\n                if (item === null) {\n                    if (!set._items['null']) {\n                        if (shouldAdd) {\n                            set._items['null'] = true;\n                        }\n                        return false;\n                    }\n                    return true;\n                }\n            /* falls through */\n            default:\n                // reduce the search size of heterogeneous sets by creating buckets\n                // for each type.\n                type = Object.prototype.toString.call(item);\n                if (!(type in set._items)) {\n                    if (shouldAdd) {\n                        set._items[type] = [item];\n                    }\n                    return false;\n                }\n                // scan through all previously applied items\n                if (!_contains(item, set._items[type])) {\n                    if (shouldAdd) {\n                        set._items[type].push(item);\n                    }\n                    return false;\n                }\n                return true;\n            }\n        }\n        return _Set;\n    }();\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation,\n     * returning the result of the first function if it is false-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * false-y value.\n     *\n     * In addition to functions, `R.both` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return _isFunction(f) ? function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        } : lift(and)(f, g);\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * `R.complement` will work on all other functors as well.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = lift(not);\n\n    /**\n     * Returns the result of concatenating the given lists or strings.\n     *\n     * Note: `R.concat` expects both arguments to be of the same type,\n     * unlike the native `Array.prototype.concat` method. It will throw\n     * an error if you `concat` an Array with a non-Array value.\n     *\n     * Dispatches to the `concat` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @sig String -> String -> String\n     * @param {Array|String} a\n     * @param {Array|String} b\n     * @return {Array|String}\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(a, b) {\n        if (a == null || !_isFunction(a.concat)) {\n            throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\n        }\n        if (_isArray(a) && !_isArray(b)) {\n            throw new TypeError(toString(b) + ' is not an array');\n        }\n        return a.concat(b);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation,\n     * returning the result of the first function if it is truth-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * truth-y value.\n     *\n     * In addition to functions, `R.either` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return _isFunction(f) ? function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        } : lift(or)(f, g);\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function that can be\n     * called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {String} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && _isFunction(target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each element and\n     * concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn`\n     * for a given argument set and returns the result. Subsequent calls to the\n     * memoized `fn` with the same argument set will not result in an additional\n     * call to `fn`; instead, the cached result for that set of arguments will be\n     * returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(n => {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return _arity(fn.length, function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        });\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig (String | RegExp) -> String -> [String]\n     * @param {String|RegExp} sep The pattern.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n     * @example\n     *\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n     */\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n        return concat(difference(list1, list2), difference(list2, list1));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both. Duplication is determined according to the value\n     * returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifference, R.difference, R.differenceWith\n     * @example\n     *\n     *      var eqA = R.eqBy(R.prop('a'));\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n     */\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @see R.match\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        if (!_isRegExp(pattern)) {\n            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n        }\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied function to\n     * each list element. Prefers the first item if the supplied function produces\n     * the same value on two items. `R.equals` is used for comparison.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var set = new _Set();\n        var result = [];\n        var idx = 0;\n        var appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (set.add(appliedItem)) {\n                result.push(item);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list. `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqBy(identity);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @see R.intersectionWith\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        return uniq(_filter(flip(_contains)(lookupList), filteredList));\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        applySpec: applySpec,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clamp: clamp,\n        clone: clone,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        converge: converge,\n        countBy: countBy,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqBy: eqBy,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        groupBy: groupBy,\n        groupWith: groupWith,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexBy: indexBy,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        join: join,\n        juxt: juxt,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensPath: lensPath,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        mergeWith: mergeWith,\n        mergeWithKey: mergeWithKey,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        objOf: objOf,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        pair: pair,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pathOr: pathOr,\n        pathSatisfies: pathSatisfies,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceBy: reduceBy,\n        reduceRight: reduceRight,\n        reduceWhile: reduceWhile,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        sequence: sequence,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitAt: splitAt,\n        splitEvery: splitEvery,\n        splitWhen: splitWhen,\n        subtract: subtract,\n        sum: sum,\n        symmetricDifference: symmetricDifference,\n        symmetricDifferenceWith: symmetricDifferenceWith,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        transpose: transpose,\n        traverse: traverse,\n        trim: trim,\n        tryCatch: tryCatch,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unless: unless,\n        unnest: unnest,\n        until: until,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        when: when,\n        where: where,\n        whereEq: whereEq,\n        without: without,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n  /* eslint-env amd */\n\n  /* TEST_ENTRY_POINT */\n\n  if (true) {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(5);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.7.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(0),n=__webpack_require__(1),ba=__webpack_require__(8);function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\nfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\nSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\nvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\nfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\nfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\nn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(z);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=z.extend({data:null}),nb=z.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\nvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\nfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\nfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\nfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\nfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=mc(a.type);c=null;d&&(c=mc(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Yb,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nwc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction xc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ac(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\nfunction Cc(a,b){Bc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Dc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Dc(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ec(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Dc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Fc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Gc(a,b,c){a=z.getPooled(Fc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\nfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Gc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\nfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\nvar Vc={eventTypes:Fc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Gc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Dc(e,\"number\",e.value)}},Wc=z.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\nvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\nfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar od=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=z}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\nfunction H(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\nfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\nfunction ie(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\nfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&H(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\nfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\nfunction Fe(a,b,c,d,e){a[Ha]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Bc(a,e);we(c,d);d=we(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?te(a,h):\"dangerouslySetInnerHTML\"===g?oe(a,h):\"children\"===g?pe(a,h):xc(a,g,h,d)}switch(c){case \"input\":Cc(a,e);break;case \"textarea\":ie(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?fe(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?fe(a,!!e.multiple,e.defaultValue,\n!0):fe(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function Ge(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function He(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Ie=[],Je=-1;function I(a){0>Je||(a.current=Ie[Je],Ie[Je]=null,Je--)}function J(a,b){Je++;Ie[Je]=a.current;a.current=b}var Ke={},K={current:Ke},L={current:!1},Le=Ke;\nfunction Me(a,b){var c=a.type.contextTypes;if(!c)return Ke;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function M(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ne(a){I(L,a);I(K,a)}function Oe(a){I(L,a);I(K,a)}\nfunction Pe(a,b,c){K.current!==Ke?t(\"168\"):void 0;J(K,b,a);J(L,c,a)}function Qe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Re(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Ke;Le=K.current;J(K,b,a);J(L,L.current,a);return!0}\nfunction Se(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Qe(a,b,Le),d.__reactInternalMemoizedMergedChildContext=b,I(L,a),I(K,a),J(K,b,a)):I(L,a);J(L,c,a)}var Te=null,Ue=null;function Ve(a){return function(b){try{return a(b)}catch(c){}}}\nfunction We(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Te=Ve(function(a){return b.onCommitFiberRoot(c,a)});Ue=Ve(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Xe(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function N(a,b,c,d){return new Xe(a,b,c,d)}\nfunction Ye(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ze(a){if(\"function\"===typeof a)return Ye(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\nfunction $e(a,b){var c=a.alternate;null===c?(c=N(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction af(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ye(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return bf(c.children,e,f,b);case fc:return cf(c,e|3,f,b);case bc:return cf(c,e|2,f,b);case cc:return a=N(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=N(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=N(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function bf(a,b,c,d){a=N(7,a,d,b);a.expirationTime=c;return a}function cf(a,b,c,d){a=N(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function df(a,b,c){a=N(6,a,null,b);a.expirationTime=c;return a}\nfunction ef(a,b,c){b=N(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ff(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);gf(b,a)}\nfunction hf(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);gf(b,a)}function jf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}\nfunction gf(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var kf=!1;function lf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction mf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function of(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=lf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=lf(a.memoizedState),e=c.updateQueue=lf(c.memoizedState)):d=a.updateQueue=mf(e):null===e&&(e=c.updateQueue=mf(d));null===e||d===e?of(d,b):null===d.lastUpdate||null===e.lastUpdate?(of(d,b),of(e,b)):(of(d,b),e.lastUpdate=b)}\nfunction qf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=lf(a.memoizedState):rf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function rf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=mf(b));return b}\nfunction sf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:kf=!0}return d}\nfunction tf(a,b,c,d,e){kf=!1;b=rf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;r<e?(null===m&&(m=k,null===g&&(f=l)),h<r&&(h=r)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction uf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);vf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;vf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function vf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction wf(a,b){return{value:a,source:b,stack:nc(b)}}var xf={current:null},yf=null,zf=null,Af=null;function Bf(a,b){var c=a.type._context;J(xf,c._currentValue,a);c._currentValue=b}function Cf(a){var b=xf.current;I(xf,a);a.type._context._currentValue=b}function Df(a){yf=a;Af=zf=null;a.firstContextDependency=null}\nfunction Ef(a,b){if(Af!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Af=a,b=1073741823;b={context:a,observedBits:b,next:null};null===zf?(null===yf?t(\"293\"):void 0,yf.firstContextDependency=zf=b):zf=zf.next=b}return a._currentValue}var Ff={},O={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?t(\"174\"):void 0;return a}\nfunction Jf(a,b){J(Hf,b,a);J(Gf,a,a);J(O,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}I(O,a);J(O,b,a)}function Kf(a){I(O,a);I(Gf,a);I(Hf,a)}function Lf(a){If(Hf.current);var b=If(O.current);var c=me(b,a.type);b!==c&&(J(Gf,a,a),J(O,c,a))}function Mf(a){Gf.current===a&&(I(O,a),I(Gf,a))}\nfunction P(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Nf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Of=Xb.ReactCurrentOwner,Pf=(new aa.Component).refs;\nfunction Qf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Vf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Rf();c=Sf(c,a);var d=nf(c);d.tag=\n2;void 0!==b&&null!==b&&(d.callback=b);Tf();pf(a,d);Uf(a,c)}};function Wf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\nfunction Xf(a,b,c){var d=!1,e=Ke;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Of.currentDispatcher.readContext(f):(e=M(b)?Le:K.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Me(a,e):Ke);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Vf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Zf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Vf.enqueueReplaceState(b,b.state,null)}\nfunction $f(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Pf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Of.currentDispatcher.readContext(f):(f=M(b)?Le:K.current,e.context=Me(a,f));f=a.updateQueue;null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Qf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Vf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var ag=Array.isArray;\nfunction bg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Pf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\nfunction cg(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction dg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=$e(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=bg(a,b,c),d.return=a,d;d=af(c.type,c.key,c.props,null,a.mode,d);d.ref=bg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=bf(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=df(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=af(b.type,b.key,b.props,null,a.mode,c),c.ref=bg(a,null,b),c.return=a,c;case $b:return b=ef(b,a.mode,c),b.return=a,b}if(ag(b)||\nlc(b))return b=bf(b,a.mode,c,null),b.return=a,b;cg(a,b)}return null}function w(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(ag(c)||lc(c))return null!==e?null:m(a,b,c,d,null);cg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(ag(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);cg(b,d)}return null}function B(e,g,h,k){for(var l=null,q=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=w(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\nm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===q?l=v:q.sibling=v;q=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=r(e,h[u],k))g=f(m,g,u),null===q?l=m:q.sibling=m,q=m;return l}for(m=d(e,m);u<h.length;u++)if(p=y(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===q?l=p:q.sibling=p,q=p;a&&m.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,p=null,v=h.next();null!==q&&!v.done;u++,v=h.next()){q.index>u?(p=q,q=null):p=q.sibling;var A=w(e,q,v.value,k);if(null===A){q||(q=p);break}a&&q&&null===A.alternate&&b(e,q);g=f(A,g,u);null===m?l=A:m.sibling=A;m=A;q=p}if(v.done)return c(e,q),l;if(null===q){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(q=d(e,q);!v.done;u++,v=h.next())v=y(q,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&q.delete(null===v.key?u:\nv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=bg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===ac?(d=bf(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=af(f.type,f.key,f.props,null,a.mode,h),h.ref=bg(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ef(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=df(f,a.mode,h),d.return=a,a=d),g(a);if(ag(f))return B(a,d,f,h);if(lc(f))return R(a,d,f,h);l&&cg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var eg=dg(!0),fg=dg(!1),gg=null,hg=null,ig=!1;\nfunction jg(a,b){var c=N(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function kg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\nfunction lg(a){if(ig){var b=hg;if(b){var c=b;if(!kg(a,b)){b=Ge(c);if(!b||!kg(a,b)){a.effectTag|=2;ig=!1;gg=a;return}jg(gg,c)}gg=a;hg=He(b)}else a.effectTag|=2,ig=!1,gg=a}}function mg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;gg=a}function ng(a){if(a!==gg)return!1;if(!ig)return mg(a),ig=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=hg;b;)jg(a,b),b=Ge(b);mg(a);hg=gg?Ge(a.stateNode):null;return!0}function og(){hg=gg=null;ig=!1}var pg=Xb.ReactCurrentOwner;\nfunction Q(a,b,c,d){b.child=null===a?fg(b,null,c,d):eg(b,a.child,c,d)}function qg(a,b,c,d,e){c=c.render;var f=b.ref;Df(b,e);d=c(d,f);b.effectTag|=1;Q(a,b,d,e);return b.child}\nfunction rg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ye(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,sg(a,b,g,d,e,f);a=af(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return tg(a,b,f);b.effectTag|=1;a=$e(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction sg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?tg(a,b,f):ug(a,b,c,d,f)}function vg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function ug(a,b,c,d,e){var f=M(c)?Le:K.current;f=Me(b,f);Df(b,e);c=c(d,f);b.effectTag|=1;Q(a,b,c,e);return b.child}\nfunction wg(a,b,c,d,e){if(M(c)){var f=!0;Re(b)}else f=!1;Df(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Xf(b,c,d,e),$f(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l));var m=c.getDerivedStateFromProps,r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;r||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l);kf=!1;var w=b.memoizedState;k=g.state=w;var y=b.updateQueue;null!==y&&(tf(b,y,d,g,e),k=b.memoizedState);h!==d||w!==k||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),k=b.memoizedState),(h=kf||Wf(b,c,h,d,w,k,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:P(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l)),m=c.getDerivedStateFromProps,\n(r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l),kf=!1,k=b.memoizedState,w=g.state=k,y=b.updateQueue,null!==y&&(tf(b,y,d,g,e),w=b.memoizedState),h!==d||k!==w||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),w=b.memoizedState),(m=kf||Wf(b,c,h,d,k,w,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,w,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,w,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=w),g.props=d,g.state=w,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return xg(a,b,c,d,f,e)}\nfunction xg(a,b,c,d,e,f){vg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Se(b,c,!1),tg(a,b,f);d=b.stateNode;pg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=eg(b,a.child,null,f),b.child=eg(b,null,h,f)):Q(a,b,h,f);b.memoizedState=d.state;e&&Se(b,c,!0);return b.child}function yg(a){var b=a.stateNode;b.pendingContext?Pe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Pe(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction zg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=bf(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=bf(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=fg(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=$e(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=$e(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=eg(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=bf(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=bf(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=eg(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction tg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=$e(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=$e(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Ag(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!L.current&&d<c){switch(b.tag){case 3:yg(b);og();break;case 5:Lf(b);break;case 1:M(b.type)&&Re(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Bf(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return zg(a,b,c);b=tg(a,b,c);return null!==b?b.sibling:null}}return tg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\na&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Me(b,K.current);Df(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(M(d)){var f=!0;Re(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Qf(b,d,g,a);e.updater=Vf;b.stateNode=e;e._reactInternalFiber=b;$f(b,d,a,c);b=xg(null,b,d,!0,f,c)}else b.tag=0,Q(null,b,e,c),b=b.child;\nreturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Nf(e);b.type=a;e=b.tag=Ze(a);f=P(a,f);g=void 0;switch(e){case 0:g=ug(null,b,a,f,c);break;case 1:g=wg(null,b,a,f,c);break;case 11:g=qg(null,b,a,f,c);break;case 14:g=rg(null,b,a,P(a.type,f),d,c);break;default:t(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),ug(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),wg(a,b,\nd,e,c);case 3:yg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;tf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)og(),b=tg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)hg=He(b.stateNode.containerInfo),gg=b,e=ig=!0;e?(b.effectTag|=2,b.child=fg(b,null,d,c)):(Q(a,b,d,c),og());b=b.child}return b;case 5:return Lf(b),null===a&&lg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\nf&&Ce(d,f)&&(b.effectTag|=16),vg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(Q(a,b,g,c),b=b.child),b;case 6:return null===a&&lg(b),null;case 13:return zg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=eg(b,null,d,c):Q(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),qg(a,b,d,e,c);case 7:return Q(a,b,b.pendingProps,c),b.child;case 8:return Q(a,b,b.pendingProps.children,c),b.child;case 12:return Q(a,b,b.pendingProps.children,\nc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Bf(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!L.current){b=tg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=nf(c);k.tag=2;pf(g,k)}g.expirationTime<\nc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\nif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}Q(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Df(b,c),e=Ef(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,Q(a,b,d,c),b.child;case 14:return e=b.type,f=P(e,b.pendingProps),f=P(e.type,f),rg(a,b,e,f,d,c);case 15:return sg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,M(d)?(a=\n!0,Re(b)):a=!1,Df(b,c),Xf(b,d,e,c),$f(b,d,e,c),xg(null,b,d,!0,a,c);default:t(\"156\")}}function Bg(a){a.effectTag|=4}var Cg=void 0,Gg=void 0,Hg=void 0,Ig=void 0;Cg=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Gg=function(){};\nHg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(O.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&Bg(b)}};Ig=function(a,b,c,d){c!==d&&Bg(b)};\nvar Jg=\"function\"===typeof WeakSet?WeakSet:Set;function Kg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Lg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Mg(a,c)}else b.current=null}\nfunction Ng(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=se(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction Og(a){\"function\"===typeof Ue&&Ue(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Mg(e,f)}}c=c.next}while(c!==b)}break;case 1:Lg(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Mg(a,f)}break;case 5:Lg(a);break;case 4:Pg(a)}}\nfunction Qg(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Rg(a){a:{for(var b=a.return;null!==b;){if(Qg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Qg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Pg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Og(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Og(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Sg(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Fe(c,f,e,a,d,b)}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Rf()));null!==a&&Ng(a,d);c=b.updateQueue;\nif(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new Jg);c.forEach(function(a){var c=Tg.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:t(\"163\")}}var Ug=\"function\"===typeof WeakMap?WeakMap:Map;function Vg(a,b,c){c=nf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Wg(d);Kg(a,b)};return c}\nfunction Xg(a,b,c){c=nf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Yg?Yg=new Set([this]):Yg.add(this));var c=b.value,e=b.stack;Kg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Zg(a){switch(a.tag){case 1:M(a.type)&&Ne(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Oe(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Kf(a),null;case 10:return Cf(a),null;default:return null}}\nvar $g={readContext:Ef},ah=Xb.ReactCurrentOwner,bh=1073741822,ch=0,dh=!1,S=null,T=null,U=0,eh=-1,fh=!1,V=null,gh=!1,hh=null,ih=null,Yg=null;function jh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ne(b);break;case 3:Kf(b);Oe(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Cf(b)}a=a.return}T=null;U=0;eh=-1;fh=!1;S=null}function Tf(){null!==ih&&(ba.unstable_cancelCallback(hh),ih())}\nfunction kh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){S=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:M(b.type)&&Ne(b);break;case 3:Kf(b);Oe(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)ng(b),b.effectTag&=-3;Gg(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)Hg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var k=If(O.current);if(ng(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,r=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":H(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)H(bb[l],e);break;case \"source\":H(\"error\",e);break;case \"img\":case \"image\":case \"link\":H(\"error\",e);H(\"load\",e);break;case \"form\":H(\"reset\",e);H(\"submit\",e);break;case \"details\":H(\"toggle\",e);break;case \"input\":Ac(e,m);H(\"invalid\",e);xe(r,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};H(\"invalid\",e);xe(r,\"onChange\");break;case \"textarea\":he(e,m),H(\"invalid\",e),xe(r,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(r,f));switch(h){case \"input\":Vb(e);Ec(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&Bg(b)}else{m=b;e=f;r=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Cg(e,b,!1,!1);r=e;l=f;m=g;var w=h,y=we(l,m);switch(l){case \"iframe\":case \"object\":H(\"load\",\nr);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)H(bb[h],r);h=m;break;case \"source\":H(\"error\",r);h=m;break;case \"img\":case \"image\":case \"link\":H(\"error\",r);H(\"load\",r);h=m;break;case \"form\":H(\"reset\",r);H(\"submit\",r);h=m;break;case \"details\":H(\"toggle\",r);h=m;break;case \"input\":Ac(r,m);h=zc(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;case \"option\":h=ee(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});H(\"invalid\",r);xe(w,\"onChange\");break;case \"textarea\":he(r,\nm);h=ge(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,R=r,v=h;for(k in v)if(v.hasOwnProperty(k)){var q=v[k];\"style\"===k?te(R,q):\"dangerouslySetInnerHTML\"===k?(q=q?q.__html:void 0,null!=q&&oe(R,q)):\"children\"===k?\"string\"===typeof q?(\"textarea\"!==B||\"\"!==q)&&pe(R,q):\"number\"===typeof q&&pe(R,\"\"+q):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=q&&xe(w,k):null!=q&&xc(R,k,q,y))}switch(l){case \"input\":Vb(r);\nEc(r,m,!1);break;case \"textarea\":Vb(r);je(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":h=r;h.multiple=!!m.multiple;r=m.value;null!=r?fe(h,!!m.multiple,r,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(r.onclick=ye)}(g=Be(f,g))&&Bg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Ig(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=If(Hf.current),If(O.current),ng(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&Bg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;S=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);Gg(b);break;case 10:Cf(b);break;case 9:break;case 14:break;case 17:M(b.type)&&Ne(b);break;default:t(\"156\")}S=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==S)return S;null!==c&&0===(c.effectTag&1024)&&(null===\nc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Zg(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction lh(a){var b=Ag(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=kh(a));ah.current=null;return b}\nfunction mh(a,b){dh?t(\"243\"):void 0;Tf();dh=!0;ah.currentDispatcher=$g;var c=a.nextExpirationTimeToWorkOn;if(c!==U||a!==T||null===S)jh(),T=a,U=c,S=$e(T.current,null,U),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==S&&!nh();)S=lh(S);else for(;null!==S;)S=lh(S)}catch(B){if(Af=zf=yf=null,null===S)d=!0,Wg(B);else{null===S?t(\"271\"):void 0;var e=S,f=e.return;if(null===f)d=!0,Wg(B);else{a:{var g=a,h=f,k=e,l=B;f=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\ntypeof l&&\"function\"===typeof l.then){var m=l;l=h;var r=-1,w=-1;do{if(13===l.tag){var y=l.alternate;if(null!==y&&(y=y.memoizedState,null!==y)){w=10*(1073741822-y.timedOutAt);break}y=l.pendingProps.maxDuration;if(\"number\"===typeof y)if(0>=y)r=0;else if(-1===r||y<r)r=y}l=l.return}while(null!==l);l=h;do{if(y=13===l.tag)y=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(y){h=l.updateQueue;null===h?l.updateQueue=new Set([m]):h.add(m);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n1===k.tag&&(null===k.alternate?k.tag=17:(f=nf(1073741823),f.tag=2,pf(k,f)));k.expirationTime=1073741823;break a}k=g.pingCache;null===k?(k=g.pingCache=new Ug,h=new Set,k.set(m,h)):(h=k.get(m),void 0===h&&(h=new Set,k.set(m,h)));h.has(f)||(h.add(f),k=oh.bind(null,g,m,f),m.then(k,k));-1===r?g=1073741823:(-1===w&&(w=10*(1073741822-jf(g,f))-5E3),g=w+r);0<=g&&eh<g&&(eh=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+\nnc(k))}fh=!0;l=wf(l,k);g=h;do{switch(g.tag){case 3:g.effectTag|=2048;g.expirationTime=f;f=Vg(g,l,f);qf(g,f);break a;case 1:if(m=l,r=g.type,w=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof r.getDerivedStateFromError||null!==w&&\"function\"===typeof w.componentDidCatch&&(null===Yg||!Yg.has(w)))){g.effectTag|=2048;g.expirationTime=f;f=Xg(g,m,f);qf(g,f);break a}}g=g.return}while(null!==g)}S=kh(e);continue}}}break}while(1);dh=!1;Af=zf=yf=ah.currentDispatcher=null;if(d)T=null,a.finishedWork=null;\nelse if(null!==S)a.finishedWork=null;else{d=a.current.alternate;null===d?t(\"281\"):void 0;T=null;if(fh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){hf(a,c);ph(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;ph(a,d,c,b,-1);return}}b&&-1!==eh?(hf(a,c),b=10*(1073741822-jf(a,c)),b<eh&&(eh=b),b=10*(1073741822-Rf()),b=eh-b,ph(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=\nc,a.finishedWork=d)}}function Mg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Yg||!Yg.has(d))){a=wf(b,a);a=Xg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}break;case 3:a=wf(b,a);a=Vg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}c=c.return}3===a.tag&&(c=wf(b,a),c=Vg(a,c,1073741823),pf(a,c),Uf(a,1073741823))}\nfunction Sf(a,b){0!==ch?a=ch:dh?a=gh?1073741823:U:b.mode&1?(a=qh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==T&&a===U&&--a):a=1073741823;qh&&(0===rh||a<rh)&&(rh=a);return a}function oh(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==T&&U===c)T=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;gf(c,a);c=a.expirationTime;0!==c&&sh(a,c)}}\nfunction Tg(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=Rf();b=Sf(b,a);a=th(a,b);null!==a&&(ff(a,b),b=a.expirationTime,0!==b&&sh(a,b))}\nfunction th(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction Uf(a,b){a=th(a,b);null!==a&&(!dh&&0!==U&&b>U&&jh(),ff(a,b),dh&&!gh&&T===a||sh(a,a.expirationTime),uh>vh&&(uh=0,t(\"185\")))}function wh(a,b,c,d,e){var f=ch;ch=1073741823;try{return a(b,c,d,e)}finally{ch=f}}var xh=null,W=null,yh=0,zh=void 0,X=!1,Ah=null,Y=0,rh=0,Bh=!1,Ch=null,Z=!1,Dh=!1,qh=!1,Eh=null,Fh=ba.unstable_now(),Gh=1073741822-(Fh/10|0),Hh=Gh,vh=50,uh=0,Ih=null;function Jh(){Gh=1073741822-((ba.unstable_now()-Fh)/10|0)}\nfunction Kh(a,b){if(0!==yh){if(b<yh)return;null!==zh&&ba.unstable_cancelCallback(zh)}yh=b;a=ba.unstable_now()-Fh;zh=ba.unstable_scheduleCallback(Lh,{timeout:10*(1073741822-b)-a})}function ph(a,b,c,d,e){a.expirationTime=d;0!==e||nh()?0<e&&(a.timeoutHandle=De(Mh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Mh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Jh();Hh=Gh;Nh(a,c)}function Rf(){if(X)return Hh;Oh();if(0===Y||1===Y)Jh(),Hh=Gh;return Hh}\nfunction sh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===W?(xh=W=a,a.nextScheduledRoot=a):(W=W.nextScheduledRoot=a,W.nextScheduledRoot=xh)):b>a.expirationTime&&(a.expirationTime=b);X||(Z?Dh&&(Ah=a,Y=1073741823,Ph(a,1073741823,!1)):1073741823===b?Qh(1073741823,!1):Kh(a,b))}\nfunction Oh(){var a=0,b=null;if(null!==W)for(var c=W,d=xh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===W?t(\"244\"):void 0;if(d===d.nextScheduledRoot){xh=W=d.nextScheduledRoot=null;break}else if(d===xh)xh=e=d.nextScheduledRoot,W.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===W){W=c;W.nextScheduledRoot=xh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===W)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}Ah=b;Y=a}var Rh=!1;function nh(){return Rh?!0:ba.unstable_shouldYield()?Rh=!0:!1}function Lh(){try{if(!nh()&&null!==xh){Jh();var a=xh;do{var b=a.expirationTime;0!==b&&Gh<=b&&(a.nextExpirationTimeToWorkOn=Gh);a=a.nextScheduledRoot}while(a!==xh)}Qh(0,!0)}finally{Rh=!1}}\nfunction Qh(a,b){Oh();if(b)for(Jh(),Hh=Gh;null!==Ah&&0!==Y&&a<=Y&&!(Rh&&Gh>Y);)Ph(Ah,Y,Gh>Y),Oh(),Jh(),Hh=Gh;else for(;null!==Ah&&0!==Y&&a<=Y;)Ph(Ah,Y,!1),Oh();b&&(yh=0,zh=null);0!==Y&&Kh(Ah,Y);uh=0;Ih=null;if(null!==Eh)for(a=Eh,Eh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Bh||(Bh=!0,Ch=d)}}if(Bh)throw a=Ch,Ch=null,Bh=!1,a;}function Nh(a,b){X?t(\"253\"):void 0;Ah=a;Y=b;Ph(a,b,!1);Qh(1073741823,!1)}\nfunction Ph(a,b,c){X?t(\"245\"):void 0;X=!0;if(c){var d=a.finishedWork;null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&(nh()?a.finishedWork=d:Sh(a,d,b)))}else d=a.finishedWork,null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&Sh(a,d,b));X=!1}\nfunction Sh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===Eh?Eh=[d]:Eh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ih?uh++:(Ih=a,uh=0);gh=dh=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n0):(d<a.latestPingedTime&&(a.latestPingedTime=0),e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ff(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ff(a,d)):d>e&&ff(a,d));gf(0,a);ah.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in\ne)var f={start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,r=-1,w=0,y=0,B=e,R=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;R=B;B=v}for(;;){if(B===\ne)break b;R===f&&++w===h&&(m=l);R===k&&++y===g&&(r=l);if(null!==(v=B.nextSibling))break;B=R;R=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(V=d;null!==V;){e=!1;f=void 0;try{for(;null!==V;){if(V.effectTag&256)a:{var q=V.alternate;h=V;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==q){var u=q.memoizedProps,A=q.memoizedState,Yf=h.stateNode,Vh=Yf.getSnapshotBeforeUpdate(h.elementType===\nh.type?u:P(h.type,u),A);Yf.__reactInternalSnapshotBeforeUpdate=Vh}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}V=V.nextEffect}}catch(db){e=!0,f=db}e&&(null===V?t(\"178\"):void 0,Mg(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){q=!1;u=void 0;try{for(;null!==V;){var x=V.effectTag;x&16&&pe(V.stateNode,\"\");if(x&128){var C=V.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(x&14){case 2:Rg(V);V.effectTag&=-3;break;case 6:Rg(V);\nV.effectTag&=-3;Sg(V.alternate,V);break;case 4:Sg(V.alternate,V);break;case 8:A=V;Pg(A);A.return=null;A.child=null;A.memoizedState=null;A.updateQueue=null;var G=A.alternate;null!==G&&(G.return=null,G.child=null,G.memoizedState=null,G.updateQueue=null)}V=V.nextEffect}}catch(db){q=!0,u=db}q&&(null===V?t(\"178\"):void 0,Mg(V,u),null!==V&&(V=V.nextEffect))}p=Ae;C=Td();x=p.focusedElem;q=p.selectionRange;if(C!==x&&x&&x.ownerDocument&&Sd(x.ownerDocument.documentElement,x)){null!==q&&Ud(x)&&(C=q.start,p=q.end,\nvoid 0===p&&(p=C),\"selectionStart\"in x?(x.selectionStart=C,x.selectionEnd=Math.min(p,x.value.length)):(p=(C=x.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),u=x.textContent.length,G=Math.min(q.start,u),q=void 0===q.end?G:Math.min(q.end,u),!p.extend&&G>q&&(u=q,q=G,G=u),u=Rd(x,G),A=Rd(x,q),u&&A&&(1!==p.rangeCount||p.anchorNode!==u.node||p.anchorOffset!==u.offset||p.focusNode!==A.node||p.focusOffset!==A.offset)&&(C=C.createRange(),C.setStart(u.node,u.offset),p.removeAllRanges(),\nG>q?(p.addRange(C),p.extend(A.node,A.offset)):(C.setEnd(A.node,A.offset),p.addRange(C))))));C=[];for(p=x;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof x.focus&&x.focus();for(x=0;x<C.length;x++)p=C[x],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(V=d;null!==V;){d=!1;x=void 0;try{for(C=c;null!==V;){var Fb=V.effectTag;if(Fb&36){var Gb=V.alternate;p=V;G=C;switch(p.tag){case 0:case 11:case 15:break;\ncase 1:var Hc=p.stateNode;if(p.effectTag&4)if(null===Gb)Hc.componentDidMount();else{var ii=p.elementType===p.type?Gb.memoizedProps:P(p.type,Gb.memoizedProps);Hc.componentDidUpdate(ii,Gb.memoizedState,Hc.__reactInternalSnapshotBeforeUpdate)}var Dg=p.updateQueue;null!==Dg&&uf(p,Dg,Hc,G);break;case 3:var Eg=p.updateQueue;if(null!==Eg){q=null;if(null!==p.child)switch(p.child.tag){case 5:q=p.child.stateNode;break;case 1:q=p.child.stateNode}uf(p,Eg,q,G)}break;case 5:var ji=p.stateNode;null===Gb&&p.effectTag&\n4&&Be(p.type,p.memoizedProps)&&ji.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=V.ref;if(null!==Ic){var Fg=V.stateNode;switch(V.tag){case 5:var ce=Fg;break;default:ce=Fg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}V=V.nextEffect}}catch(db){d=!0,x=db}d&&(null===V?t(\"178\"):void 0,Mg(V,x),null!==V&&(V=V.nextEffect))}dh=gh=!1;\"function\"===typeof Te&&Te(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Yg=\nnull);a.expirationTime=b;a.finishedWork=null}function Wg(a){null===Ah?t(\"246\"):void 0;Ah.expirationTime=0;Bh||(Bh=!0,Ch=a)}function Th(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||X||Qh(1073741823,!1)}}function Uh(a,b){if(Z&&!Dh){Dh=!0;try{return a(b)}finally{Dh=!1}}return a(b)}function Wh(a,b,c){if(qh)return a(b,c);Z||X||0===rh||(Qh(rh,!1),rh=0);var d=qh,e=Z;Z=qh=!0;try{return a(b,c)}finally{qh=d,(Z=e)||X||Qh(1073741823,!1)}}\nfunction Xh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(M(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(M(h)){c=Qe(c,h,g);break a}}c=g}else c=Ke;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nTf();pf(f,e);Uf(f,d);return d}function Yh(a,b,c,d){var e=b.current,f=Rf();e=Sf(f,e);return Xh(a,b,c,e,d)}function Zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function $h(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nCb=function(a,b,c){switch(b){case \"input\":Cc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Cc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\nfunction ai(a){var b=1073741822-25*(((1073741822-Rf()+500)/25|0)+1);b>=bh&&(b=bh-1);this._expirationTime=bh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}ai.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new bi;Xh(a,b,null,c,d._onCommit);return d};\nai.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nai.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Nh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};ai.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function bi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}bi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nbi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction ci(a,b,c){b=N(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nci.prototype.render=function(a,b){var c=this._internalRoot,d=new bi;b=void 0===b?null:b;null!==b&&d.then(b);Yh(a,c,null,d._onCommit);return d};ci.prototype.unmount=function(a){var b=this._internalRoot,c=new bi;a=void 0===a?null:a;null!==a&&c.then(a);Yh(null,b,null,c._onCommit);return c};ci.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new bi;c=void 0===c?null:c;null!==c&&e.then(c);Yh(b,d,a,e._onCommit);return e};\nci.prototype.createBatch=function(){var a=new ai(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function di(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Th;Lb=Wh;Mb=function(){X||0===rh||(Qh(rh,!1),rh=0)};\nfunction ei(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ci(a,!1,b)}\nfunction fi(a,b,c,d,e){di(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ei(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Zh(f._internalRoot);h.call(a)}}Uh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Zh(f._internalRoot)}\nfunction gi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;di(b)?void 0:t(\"200\");return $h(a,b,null,c)}\nvar ki={createPortal:gi,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return fi(null,a,b,!0,c)},render:function(a,b,c){return fi(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return fi(a,b,c,!1,d)},unmountComponentAtNode:function(a){di(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(Uh(function(){fi(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return gi.apply(void 0,arguments)},unstable_batchedUpdates:Th,unstable_interactiveUpdates:Wh,flushSync:function(a,b){X?t(\"187\"):void 0;var c=Z;Z=!0;try{return wh(a,b)}finally{Z=c,Qh(1073741823,!1)}},unstable_createRoot:hi,unstable_flushControlled:function(a){var b=Z;Z=!0;try{wh(a)}finally{(Z=b)||X||Qh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\nKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]}};function hi(a,b){di(a)?void 0:t(\"299\",\"unstable_createRoot\");return new ci(a,!0,null!=b&&!0===b.hydrate)}(function(a){var b=a.findFiberByHostInstance;return We(n({},a,{overrideProps:null,findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.7.0\",rendererPackageName:\"react-dom\"});\nvar li={default:ki},mi=li&&ki||li;module.exports=mi.default||mi;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.7.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar k=__webpack_require__(1),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\nfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\nJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\nfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\nif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.7.0\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.12.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nObject.defineProperty(exports,\"__esModule\",{value:!0});var c=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=c.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;d=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=d()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===c)c=g.next=g.previous=g;else{d=null;a=c;do{if(a.expirationTime>=b){d=a;break}a=a.next}while(a!==c);null===d?d=c:d===c&&(c=g,p());b=d.previous;b.next=d.previous=g;g.next=d;g.previous=\nb}}function v(){if(-1===k&&null!==c&&1===c.priorityLevel){m=!0;try{do u();while(null!==c&&1===c.priorityLevel)}finally{m=!1,null!==c?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==c;){var d=exports.unstable_now();if(c.expirationTime<=d){do u();while(null!==c&&c.expirationTime<=d)}else break}else if(null!==c){do u();while(null!==c&&!w())}}finally{m=!1,f=b,null!==c?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var d=exports.unstable_now(),e=!1;if(0>=P-d)if(-1!==b&&b<=d)e=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var d=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=d,k=e,v()}};\nexports.unstable_scheduleCallback=function(a,b){var d=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=d+b.timeout;else switch(h){case 1:b=d+-1;break;case 2:b=d+250;break;case 5:b=d+1073741823;break;case 4:b=d+1E4;break;default:b=d+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,p();else{d=null;var e=c;do{if(e.expirationTime>b){d=e;break}e=e.next}while(e!==c);null===d?d=c:d===c&&(c=a,p());\nb=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var d=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=d,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\nexports.unstable_shouldYield=function(){return!f&&(null!==c&&c.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==c&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return c};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(7);\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ramda___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_ramda__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_dom__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_dom__);\n\n\n\n\n\n\n\nvar arr1 = [1, 1, 1, 2, 2, 3, 4, 5, 6, 6];\nvar arr2 = [5, 6, 6, 6, 7, 7, 8, 9, 10, 1];\n\nvar arr3 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"union\"])(arr1, arr2);\n\nvar arr4 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_ramda__[\"uniq\"])(arr1);\n\nconsole.log('Union is working', arr3);\nconsole.log('Uniq is working', arr4);\n\nconsole.log('module export default', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* default */])(2, 4));\nconsole.log('module export function', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* sub */])(2, 4));\nconsole.log('module export above function', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* multiplication */])(2, 4));\nconsole.log('module export above function together', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils__[\"d\" /* div */])(2, 4));\nconsole.log('module export Variable', __WEBPACK_IMPORTED_MODULE_1__utils__[\"e\" /* PI */]);\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2f11e657c0141fc18cb3","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 0\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 1\n// module chunks = 0","function sum(a, b) {\n  return a + b\n}\n\n//named export\n//have to various exports into one file\n//same file\n//only can called to the same to name\n//import needs to the keys { sub }\nexport function sub(a, b) {\n  return a - b\n}\n\nfunction mult(a, b) {\n  return a * b\n}\n\nfunction div(a, b) {\n  return a / b\n}\n\nconst PI = 3.14\n\nexport { mult as multiplication, div, PI }\n\n\n//method default\n//only one default per file\n//import with qq name\n//don't need util the keys\nexport default sum\n\n\n// WEBPACK FOOTER //\n// ./utils.js","//  Ramda v0.22.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments, regardless of\n     * their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are\n     * equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    /* eslint-disable no-unused-vars */\n    var _arity = function _arity(n, fn) {\n        /* eslint-disable no-unused-vars */\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\n        var list = [];\n        var next;\n        while (!(next = iter.next()).done) {\n            list.push(next.value);\n        }\n        return list;\n    };\n\n    var _arrayOf = function _arrayOf() {\n        return Array.prototype.slice.call(arguments);\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n    var _functionName = function _functionName(f) {\n        // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n        var match = String(f).match(/^function (\\w*)/);\n        return match == null ? '' : match[1];\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    var _isArguments = function () {\n        var toString = Object.prototype.toString;\n        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n            return toString.call(x) === '[object Arguments]';\n        } : function _isArguments(x) {\n            return _has('callee', x);\n        };\n    }();\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    var _isFunction = function _isFunction(x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isObject = function _isObject(x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var _isPlaceholder = function _isPlaceholder(a) {\n        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n    };\n\n    var _isRegExp = function _isRegExp(x) {\n        return Object.prototype.toString.call(x) === '[object RegExp]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, functor) {\n        var idx = 0;\n        var len = functor.length;\n        var result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(functor[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    var _objectAssign = function _objectAssign(target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        var idx = 1;\n        var length = arguments.length;\n        while (idx < length) {\n            var source = arguments[idx];\n            if (source != null) {\n                for (var nextKey in source) {\n                    if (_has(nextKey, source)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n            idx += 1;\n        }\n        return output;\n    };\n\n    var _of = function _of(x) {\n        return [x];\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    // \\b matches word boundary; [\\b] matches backspace\n    var _quote = function _quote(s) {\n        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    var _aperture = function _aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    };\n\n    var _assign = typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it\n     * will default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Optimized internal one-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0 || _isPlaceholder(a)) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            switch (arguments.length) {\n            case 0:\n                return f2;\n            case 1:\n                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n                    return fn(a, _b);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b);\n                }) : fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            switch (arguments.length) {\n            case 0:\n                return f3;\n            case 1:\n                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                });\n            case 2:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _curry1(function (_c) {\n                    return fn(a, b, _c);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n                    return fn(_a, _b, c);\n                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b, c);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b, c);\n                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n                    return fn(a, b, _c);\n                }) : fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @param {Array} received An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (!_isPlaceholder(result)) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    var _dropLastWhile = function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    };\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xaperture = function () {\n        function XAperture(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n        XAperture.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XAperture.prototype['@@transducer/step'] = function (result, input) {\n            this.store(input);\n            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n        };\n        XAperture.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        XAperture.prototype.getCopy = function () {\n            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n        };\n        return _curry2(function _xaperture(n, xf) {\n            return new XAperture(n, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropLast = function () {\n        function XDropLast(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLast.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.full) {\n                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n            }\n            this.store(input);\n            return result;\n        };\n        XDropLast.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        return _curry2(function _xdropLast(n, xf) {\n            return new XDropLast(n, xf);\n        });\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xreduceBy = function () {\n        function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n            this.valueFn = valueFn;\n            this.valueAcc = valueAcc;\n            this.keyFn = keyFn;\n            this.xf = xf;\n            this.inputs = {};\n        }\n        XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n        XReduceBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            this.inputs = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.keyFn(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                this.valueAcc\n            ];\n            this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n            return result;\n        };\n        return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n            return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n            this.i = 0;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            this.i += 1;\n            var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n            return this.i >= this.n ? _reduced(ret) : ret;\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    /**\n     * Adds two values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return Number(a) + Number(b);\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array, returning a\n     * new copy of the array with the element at the given index replaced with the\n     * result of the function application.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @see R.update\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if\n     * there are any that don't.\n     *\n     * Dispatches to the `all` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n     * other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns `true` if both arguments are `true`; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n     * @see R.both\n     * @example\n     *\n     *      R.and(true, true); //=> true\n     *      R.and(true, false); //=> false\n     *      R.and(false, true); //=> false\n     *      R.and(false, false); //=> false\n     */\n    var and = _curry2(function and(a, b) {\n        return a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n     * greater than the length of the list, an empty list is returned.\n     *\n     * Dispatches to the `aperture` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @see R.transduce\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by\n     * the given element.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should be a\n     * bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value. Note that this copies and flattens prototype\n     * properties onto the new object as well. All non-primitive properties are\n     * copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes required\n     * to create the given path, and placing the specific value at the tail end of\n     * that path. Note that this copies and flattens prototype properties onto the\n     * new object as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return val;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @category Object\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     * @see R.partial\n     * @example\n     *\n     *      var log = R.bind(console.log, console);\n     *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n     *      // logs {a: 2}\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * Restricts a number to be within a range.\n     *\n     * Also works for other ordered types such as Strings and Dates.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a -> a\n     * @param {Number} minimum number\n     * @param {Number} maximum number\n     * @param {Number} value to be clamped\n     * @return {Number} Returns the clamped value\n     * @example\n     *\n     *      R.clamp(1, 10, -1) // => 1\n     *      R.clamp(1, 10, 11) // => 10\n     *      R.clamp(1, 10, 4)  // => 4\n     */\n    var clamp = _curry3(function clamp(min, max, value) {\n        if (min > max) {\n            throw new Error('min must not be greater than max in clamp(min, max, value)');\n        }\n        return value < min ? min : value > max ? max : value;\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first\n     * element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the specified\n     * arity. The curried function has two unusual capabilities. First, its\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var sumArgs = (...args) => R.sum(args);\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n     * otherwise the first argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = R.defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     *      defaultTo42(parseInt('string')); //=> 42\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null || v !== v ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      var cmp = (x, y) => x.a === y.a;\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n                out.push(first[idx]);\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the given path.\n     * Note that this copies and flattens prototype properties onto the new object\n     * as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.11.0\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list excluding the leading elements of a given list which\n     * satisfy the supplied predicate function. It passes each value to the supplied\n     * predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is applied to one argument: *(value)*.\n     *\n     * Dispatches to the `dropWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var lteTwo = x => x <= 2;\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n     * types are supported if they define `<Type>.empty` and/or\n     * `<Type>.prototype.empty`.\n     *\n     * Dispatches to the `empty` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    // else\n    var empty = _curry1(function empty(x) {\n        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n            return arguments;\n        }() : // else\n        void 0;\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`,\n     * according to the `transformation` functions. All non-primitive properties\n     * are copied by reference.\n     *\n     * A `transformation` function will not be invoked if its corresponding key\n     * does not exist in the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var result = {};\n        var transformation, key, type;\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Returns the first element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `find` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `findLast` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each\n     * element in the list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\n     * details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n     * the original array. In some libraries this function is named `each`.\n     *\n     * Dispatches to the `forEach` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @see R.addIndex\n     * @example\n     *\n     *      var printXPlusFive = x => console.log(x + 5);\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      // logs 6\n     *      // logs 7\n     *      // logs 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Creates a new object from a list key-value pairs. If a key appears in\n     * multiple pairs, the rightmost pair is included in the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs, R.pair\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var result = {};\n        var idx = 0;\n        while (idx < pairs.length) {\n            result[pairs[idx][0]] = pairs[idx][1];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and returns a list of lists where each sublist's elements are\n     * all \"equal\" according to the provided equality function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.21.0\n     * @category List\n     * @sig ((a, a) → Boolean) → [a] → [[a]]\n     * @param {Function} fn Function for determining whether two given (adjacent)\n     *        elements should be in the same group\n     * @param {Array} list The array to group. Also accepts a string, which will be\n     *        treated as a list of characters.\n     * @return {List} A list that contains sublists of equal elements,\n     *         whose concatenations are equal to the original list.\n     * @example\n     *\n     * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n     *\n     * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n     *\n     * R.groupWith(R.eqBy(isVowel), 'aestiou')\n     * //=> ['ae', 'st', 'iou']\n     */\n    var groupWith = _curry2(function (fn, list) {\n        var res = [];\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            var nextidx = idx + 1;\n            while (nextidx < len && fn(list[idx], list[nextidx])) {\n                nextidx += 1;\n            }\n            res.push(list.slice(idx, nextidx));\n            idx = nextidx;\n        }\n        return res;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has a property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good\n     * as a default or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse`\n     * function depending upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @see R.unless, R.when\n     * @example\n     *\n     *      var incCount = R.ifElse(\n     *        R.has('count'),\n     *        R.over(R.lensProp('count'), R.inc),\n     *        R.assoc('count', 1)\n     *      );\n     *      incCount({});           //=> { count: 1 }\n     *      incCount({ count: 1 }); //=> { count: 2 }\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`. _Note that\n     * this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n     * destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * Dispatches to the `intersperse` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor. This\n     * function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (_isString(x)) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own properties of\n     * the supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    // Safari bug\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        // Safari bug\n        var hasArgsEnumBug = function () {\n            'use strict';\n            return arguments.propertyIsEnumerable('length');\n        }();\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, nIdx;\n            var ks = [];\n            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n            for (prop in obj) {\n                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the properties of the supplied\n     * object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop;\n        var ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && _isNumber(list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from left to right, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var appender = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from right to left, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1;\n        var result = [];\n        var tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function will\n     * return an empty array when there are no matches. This differs from\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @see R.test\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.maxBy(square, -3, 2); //=> -3\n     *\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of the first object merged with\n     * the own properties of the second object. If a key exists in both objects,\n     * the value from the second object will be used.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.mergeWith, R.mergeWithKey\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(l, r) {\n        return _assign({}, l, r);\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return _assign.apply(null, [{}].concat(list));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the key\n     * and the values associated with the key in each object, with the result being\n     * used as the value associated with the key in the returned object. The key\n     * will be excluded from the returned object if the resulting value is\n     * `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWith\n     * @example\n     *\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n     *      R.mergeWithKey(concatValues,\n     *                     { a: true, thing: 'foo', values: [10, 20] },\n     *                     { b: true, thing: 'bar', values: [15, 35] });\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n     */\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n        var result = {};\n        var k;\n        for (k in l) {\n            if (_has(k, l)) {\n                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n            }\n        }\n        for (k in r) {\n            if (_has(k, r) && !_has(k, result)) {\n                result[k] = r[k];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.minBy(square, -3, 2); //=> 2\n     *\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the first parameter by the second and returns the remainder. Note\n     * that this function preserves the JavaScript-style behavior for modulo. For\n     * mathematical modulo see `mathMod`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = (a, b) => [a, b];\n     *\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); //=> true\n     *      R.not(1); //=> false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string. If n is negative the\n     * element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth(2, 'abc'); //=> 'c'\n     *      R.nth(3, 'abc'); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        var arity = n < 0 ? 1 : n + 1;\n        return curryN(arity, function () {\n            return nth(n, arguments);\n        });\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @see R.pair\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.objOf('must'),\n     *        R.map(R.objOf('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var objOf = _curry2(function objOf(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(_of);\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of\n     * `fn` such that `fn` can only ever be called once, no matter how many times\n     * the returned function is invoked. The first value calculated is returned in\n     * subsequent invocations.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(x => x + 1);\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false;\n        var result;\n        return _arity(fn.length, function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        });\n    });\n\n    /**\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n     * if both arguments are `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n     * @see R.either\n     * @example\n     *\n     *      R.or(true, true); //=> true\n     *      R.or(true, false); //=> true\n     *      R.or(false, true); //=> true\n     *      R.or(false, false); //=> false\n     */\n    var or = _curry2(function or(a, b) {\n        return a || b;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the result of applying the given function to\n     * the focused value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    // `Identity` is a functor that holds a single value, where `map` simply\n    // transforms the held value with the provided function.\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    var over = function () {\n        // `Identity` is a functor that holds a single value, where `map` simply\n        // transforms the held value with the provided function.\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            // The value returned by the getter function is first transformed with `f`,\n            // then set as the value of an `Identity`. This is then mapped over with the\n            // setter function of the lens.\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig a -> b -> (a,b)\n     * @param {*} fst\n     * @param {*} snd\n     * @return {Array}\n     * @see R.objOf, R.of\n     * @example\n     *\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n     */\n    var pair = _curry2(function pair(fst, snd) {\n        return [\n            fst,\n            snd\n        ];\n    });\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path`.\n     * @see R.prop\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        var val = obj;\n        var idx = 0;\n        while (idx < paths.length) {\n            if (val == null) {\n                return;\n            }\n            val = val[paths[idx]];\n            idx += 1;\n        }\n        return val;\n    });\n\n    /**\n     * If the given, non-null object has a value at the given path, returns the\n     * value at that path. Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig a -> [String] -> Object -> a\n     * @param {*} d The default value.\n     * @param {Array} p The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path` of the supplied object or the default value.\n     * @example\n     *\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n     */\n    var pathOr = _curry3(function pathOr(d, p, obj) {\n        return defaultTo(d, path(p, obj));\n    });\n\n    /**\n     * Returns `true` if the specified object property at given path satisfies the\n     * given predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Logic\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n     * @param {Function} pred\n     * @param {Array} propPath\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propSatisfies, R.path\n     * @example\n     *\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n     */\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n        return propPath.length > 0 && pred(path(propPath, obj));\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified. If\n     * the key does not exist, the property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit, R.props\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\n     * properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that satisfy\n     * the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick, R.filter\n     * @example\n     *\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the\n     * contents of the list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated\n     * property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @see R.path\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is, R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return is(type, obj[name]);\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property. Otherwise returns the provided default\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq, R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the reduce\n     * and transduce functions. The returned value should be considered a black\n     * box: the internal structure is not guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above. For instance, it is not currently supported by reduceRight.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category List\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @see R.reduce, R.transduce\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\n     * the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list or string with the elements or characters in reverse\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {Array|String}\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     *\n     *      R.reverse('abc');      //=> 'cba'\n     *      R.reverse('ab');       //=> 'ba'\n     *      R.reverse('a');        //=> 'a'\n     *      R.reverse('');         //=> ''\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values\n     * from the left\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * Dispatches to the `slice` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function,\n     * which should accept two values at a time and return a negative number if the\n     * first value is smaller, a positive number if it's larger, and zero if they\n     * are equal. Please note that this is a **copy** of the list. It does not\n     * modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Splits a given list or string at a given index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig Number -> [a] -> [[a], [a]]\n     * @sig Number -> String -> [String, String]\n     * @param {Number} index The index where the array/string is split.\n     * @param {Array|String} array The array/string to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n     */\n    var splitAt = _curry2(function splitAt(index, array) {\n        return [\n            slice(0, index, array),\n            slice(index, length(array), array)\n        ];\n    });\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\n     *\n     *  - the result of concatenating the two output lists is equivalent to the input list;\n     *  - none of the elements of the first output list satisfies the predicate; and\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n     * @param {Function} pred The predicate that determines where the array is split.\n     * @param {Array} list The array to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n     */\n    var splitWhen = _curry2(function splitWhen(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var prefix = [];\n        while (idx < len && !pred(list[idx])) {\n            prefix.push(list[idx]);\n            idx += 1;\n        }\n        return [\n            prefix,\n            _slice(list, idx)\n        ];\n    });\n\n    /**\n     * Subtracts its second argument from its first argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return Number(a) - Number(b);\n    });\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * Dispatches to the `slice` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.head, R.init, R.last\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * Dispatches to the `take` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, and terminating when the\n     * predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile, R.addIndex\n     * @example\n     *\n     *      var isNotOne = x => x !== 1;\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list,\n     * passing each value to the supplied predicate function, and terminating when\n     * the predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * Dispatches to the `takeWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isNotFour = x => x !== 4;\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = x => console.log('x is ' + x);\n     *      R.tap(sayX, 100); //=> 100\n     *      // logs 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results\n     * of those function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n     * and is gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.3\n     * @category List\n     * @sig (Number -> a) -> Number -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var idx = 0;\n        var list;\n        if (len < 0 || isNaN(len)) {\n            throw new RangeError('n must be a non-negative number');\n        }\n        list = new Array(len);\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. Only the object's\n     * own properties are used.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. The object's own\n     * properties and prototype properties are used. Note that the order of the\n     * output array is not guaranteed to be consistent across different JS\n     * platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Transposes the rows and columns of a 2D list.\n     * When passed a list of `n` lists of length `x`,\n     * returns a list of `x` lists of length `n`.\n     *\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [[a]] -> [[a]]\n     * @param {Array} list A 2D list\n     * @return {Array} A 2D list\n     * @example\n     *\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     *\n     * If some of the rows are shorter than the following rows, their elements are skipped:\n     *\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n     */\n    var transpose = _curry1(function transpose(outerlist) {\n        var i = 0;\n        var result = [];\n        while (i < outerlist.length) {\n            var innerlist = outerlist[i];\n            var j = 0;\n            while (j < innerlist.length) {\n                if (typeof result[j] === 'undefined') {\n                    result[j] = [];\n                }\n                result[j].push(innerlist[j]);\n                j += 1;\n            }\n            i += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n     * function evaluates the `tryer`; if it does not throw, it simply returns the\n     * result. If the `tryer` *does* throw, the returned function evaluates the\n     * `catcher` function and returns its result. Note that for effective\n     * composition with this function, both the `tryer` and `catcher` functions\n     * must return the same type of results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n     * @param {Function} tryer The function that may throw.\n     * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n     * @return {Function} A new function that will catch exceptions and send then to the catcher.\n     * @example\n     *\n     *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n     *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n     */\n    var tryCatch = _curry2(function _tryCatch(tryer, catcher) {\n        return _arity(tryer.length, function () {\n            try {\n                return tryer.apply(this, arguments);\n            } catch (e) {\n                return catcher.apply(this, _concat([e], arguments));\n            }\n        });\n    });\n\n    /**\n     * Gives a single-word string description of the (native) type of a value,\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n     * attempt to distinguish user Object types any further, reporting them all as\n     * 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns a\n     * function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function which\n     * takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = a => b => c => d => a + b + c + d;\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns\n     * either false to stop iteration or an array of length 2 containing the value\n     * to add to the resulting list and the seed to be used in the next call to the\n     * iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = n => n > 50 ? false : [-n, n + 10];\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied predicate to\n     * two list elements. Prefers the first item if two items compare equal based\n     * on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = R.eqBy(String);\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is not satisfied, the function will return the result of\n     * calling the `whenFalseFn` function with the same argument. If the predicate\n     * is satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred        A predicate function\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n     *                               to a falsy value.\n     * @param {*}        x           An object to test with the `pred` function and\n     *                               pass to `whenFalseFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n     * @see R.ifElse, R.when\n     * @example\n     *\n     *      // coerceArray :: (a|[a]) -> [a]\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n     *      coerceArray(1);         //=> [1]\n     */\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n        return pred(x) ? x : whenFalseFn(x);\n    });\n\n    /**\n     * Takes a predicate, a transformation function, and an initial value,\n     * and returns a value of the same type as the initial value.\n     * It does so by applying the transformation until the predicate is satisfied,\n     * at which point it returns the satisfactory value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred A predicate function\n     * @param {Function} fn The iterator function\n     * @param {*} init Initial value\n     * @return {*} Final value that satisfies predicate\n     * @example\n     *\n     *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n     */\n    var until = _curry3(function until(pred, fn, init) {\n        var val = init;\n        while (!pred(val)) {\n            val = fn(val);\n        }\n        return val;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the provided index\n     * replaced with the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @see R.adjust\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Accepts a function `fn` and a list of transformer functions and returns a\n     * new curried function. When the new function is invoked, it calls the\n     * function `fn` with parameters consisting of the result of calling each\n     * supplied handler on successive arguments to the new function.\n     *\n     * If more arguments are passed to the returned function than transformer\n     * functions, those arguments are passed directly to `fn` as additional\n     * parameters. If you expect additional arguments that don't need to be\n     * transformed, although you can ignore them, it's best to pass an identity\n     * function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {Array} transformers A list of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n     */\n    var useWith = _curry2(function useWith(fn, transformers) {\n        return curryN(transformers.length, function () {\n            var args = [];\n            var idx = 0;\n            while (idx < transformers.length) {\n                args.push(transformers[idx].call(this, arguments[idx]));\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n        });\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across different\n     * JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties, of the\n     * supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop;\n        var vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    // `Const` is a functor that effectively ignores the function given to `map`.\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    var view = function () {\n        // `Const` is a functor that effectively ignores the function given to `map`.\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            // Using `Const` effectively ignores the setter function of the `lens`,\n            // leaving the value returned by the getter function unmodified.\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is satisfied, the function will return the result of calling\n     * the `whenTrueFn` function with the same argument. If the predicate is not\n     * satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred       A predicate function\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\n     *                              evaluates to a truthy value.\n     * @param {*}        x          An object to test with the `pred` function and\n     *                              pass to `whenTrueFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n     * @see R.ifElse, R.unless\n     * @example\n     *\n     *      // truncate :: String -> String\n     *      var truncate = R.when(\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n     *      );\n     *      truncate('12345');         //=> '12345'\n     *      truncate('0123456789ABC'); //=> '0123456789…'\n     */\n    var when = _curry3(function when(pred, whenTrueFn, x) {\n        return pred(x) ? whenTrueFn(x) : x;\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of the\n     * test object. `where` returns true if all the predicates return true, false\n     * otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = where({\n     *        a: equals('foo'),\n     *        b: complement(equals('bar')),\n     *        x: gt(__, 10),\n     *        y: lt(__, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the\n     * parameters, or do other processing either before the internal function is\n     * called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @deprecated since v0.22.0\n     * @example\n     *\n     *      var greet = name => 'Hello ' + name;\n     *\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n     *\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible pair\n     * from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up equally-positioned\n     * items from both lists. The returned list is truncated to the length of the\n     * shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     * Key/value pairing is truncated to the length of the shorter of the two lists.\n     * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0;\n        var len = Math.min(keys.length, values.length);\n        var out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to each\n     * equally-positioned pair in the lists. The returned list is truncated to the\n     * length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = (x, y) => {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @param {Boolean} deep Whether or not to perform deep cloning.\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo, deep) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value.valueOf());\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return _curry2(function (fn, args) {\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        });\n    };\n\n    var _dropLast = function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    };\n\n    // Values of other types are only equal if identical.\n    var _equals = function _equals(a, b, stackA, stackB) {\n        if (identical(a, b)) {\n            return true;\n        }\n        if (type(a) !== type(b)) {\n            return false;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n        }\n        switch (type(a)) {\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n            if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n                return a === b;\n            }\n            break;\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n                return false;\n            }\n            break;\n        case 'Date':\n            if (!identical(a.valueOf(), b.valueOf())) {\n                return false;\n            }\n            break;\n        case 'Error':\n            return a.name === b.name && a.message === b.message;\n        case 'RegExp':\n            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n                return false;\n            }\n            break;\n        case 'Map':\n        case 'Set':\n            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n                return false;\n            }\n            break;\n        case 'Int8Array':\n        case 'Uint8Array':\n        case 'Uint8ClampedArray':\n        case 'Int16Array':\n        case 'Uint16Array':\n        case 'Int32Array':\n        case 'Uint32Array':\n        case 'Float32Array':\n        case 'Float64Array':\n            break;\n        case 'ArrayBuffer':\n            break;\n        default:\n            // Values of other types are only equal if identical.\n            return false;\n        }\n        var keysA = keys(a);\n        if (keysA.length !== keys(b).length) {\n            return false;\n        }\n        var idx = stackA.length - 1;\n        while (idx >= 0) {\n            if (stackA[idx] === a) {\n                return stackB[idx] === b;\n            }\n            idx -= 1;\n        }\n        stackA.push(a);\n        stackB.push(b);\n        idx = keysA.length - 1;\n        while (idx >= 0) {\n            var key = keysA[idx];\n            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n                return false;\n            }\n            idx -= 1;\n        }\n        stackA.pop();\n        stackB.pop();\n        return true;\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n     * function based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, jlen, j;\n            var result = [];\n            var idx = 0;\n            var ilen = list.length;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0;\n            var len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                xs.push(x);\n                return xs;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xdropLastWhile = function () {\n        function XDropLastWhile(fn, xf) {\n            this.f = fn;\n            this.retained = [];\n            this.xf = xf;\n        }\n        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n            this.retained = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n        };\n        XDropLastWhile.prototype.flush = function (result, input) {\n            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n            this.retained = [];\n            return this.xf['@@transducer/step'](result, input);\n        };\n        XDropLastWhile.prototype.retain = function (result, input) {\n            this.retained.push(input);\n            return result;\n        };\n        return _curry2(function _xdropLastWhile(fn, xf) {\n            return new XDropLastWhile(fn, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new\n     * parameters to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that\n     * more closely resembles `Array.prototype.map`. Note that this will only work\n     * for functions in which the iteration callback function is the first\n     * parameter, and where the list is the last parameter. (This latter might be\n     * unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n     * copied, but assigned by their reference.\n     *\n     * Dispatches to a `clone` method if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried function\n     * has two unusual capabilities. First, its arguments needn't be provided one\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * Dispatches to the `drop` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take, R.transduce\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\n    /**\n     * Returns a new list excluding all the tailing elements of a given list which\n     * satisfy the supplied predicate function. It passes each value from the right\n     * to the supplied predicate function, skipping elements while the predicate\n     * function returns `true`. The predicate function is applied to one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile, R.addIndex\n     * @example\n     *\n     *      var lteThree = x => x <= 3;\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n     */\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n     * cyclical data structures.\n     *\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\n     * present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _equals(a, b, [], []);\n    });\n\n    /**\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n     * same type containing the members of the given filterable which satisfy the\n     * given predicate.\n     *\n     * Dispatches to the `filter` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.reject, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    // else\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n        return _isObject(filterable) ? _reduce(function (acc, key) {\n            if (pred(filterable[key])) {\n                acc[key] = filterable[key];\n            }\n            return acc;\n        }, {}, keys(filterable)) : // else\n        _filter(pred, filterable);\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n     * and putting them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two\n     * arguments' order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {*}\n     * @see R.tail, R.init, R.last\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.last, R.head, R.tail\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @return {Array} A new list containing those elements common to both lists.\n     * @see R.intersection\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        var results = [];\n        var idx = 0;\n        while (idx < filteredList.length) {\n            if (_containsWith(pred, filteredList[idx], lookupList)) {\n                results[results.length] = filteredList[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Transforms the items of the list with the transducer and appends the\n     * transformed items to the accumulator using an appropriate iterator function\n     * based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated\n     * items will be appended to arrays and concatenated to strings. Objects will\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity\n     * reducing iterator function, step, 0-arity initial value function, init, and\n     * 1-arity result extraction function result. The step function is used as the\n     * iterator function in reduce. The result function is used to convert the\n     * final accumulator into the return type and in most cases is R.identity. The\n     * init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects with duplicate values\n     * by putting the values into an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object as values, and the\n     * values of the given object, which are coerced to strings, as keys. Note\n     * that the last key found is preferred when handling the same value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the given value is its type's empty value; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig a -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @see R.empty\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty({});          //=> true\n     *      R.isEmpty({length: 0}); //=> false\n     */\n    var isEmpty = _curry1(function isEmpty(x) {\n        return x != null && equals(x, empty(x));\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.init, R.head, R.tail\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in an array, or -1 if\n     * the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Takes a function and\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n     * applies the function to each of the functor's values, and returns\n     * a functor of the same shape.\n     *\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n     *\n     * Dispatches to the `map` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * Also treats functions as functors and will compose them together.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Functor f => (a -> b) -> f a -> f b\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @see R.transduce, R.addIndex\n     * @example\n     *\n     *      var double = x => x * 2;\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     *\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n     */\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n        switch (Object.prototype.toString.call(functor)) {\n        case '[object Function]':\n            return curryN(functor.length, function () {\n                return fn.call(this, functor.apply(this, arguments));\n            });\n        case '[object Object]':\n            return _reduce(function (acc, key) {\n                acc[key] = fn(functor[key]);\n                return acc;\n            }, {}, keys(functor));\n        default:\n            return _map(fn, functor);\n        }\n    }));\n\n    /**\n     * An Object-specific version of `map`. The function is applied to three\n     * arguments: *(value, key, obj)*. If only the value is significant, use\n     * `map` instead.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig ((*, String, Object) -> *) -> Object -> Object\n     * @param {Function} fn\n     * @param {Object} obj\n     * @return {Object}\n     * @see R.map\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the values\n     * associated with the key in each object, with the result being used as the\n     * value associated with the key in the returned object. The key will be\n     * excluded from the returned object if the resulting value is `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWithKey\n     * @example\n     *\n     *      R.mergeWith(R.concat,\n     *                  { a: true, values: [10, 20] },\n     *                  { b: true, values: [15, 35] });\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n     */\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n        return mergeWithKey(function (_, _l, _r) {\n            return fn(_l, _r);\n        }, l, r);\n    });\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided initially followed by the arguments provided to `g`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partialRight\n     * @example\n     *\n     *      var multiply = (a, b) => a * b;\n     *      var double = R.partial(multiply, [2]);\n     *      double(2); //=> 4\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var sayHello = R.partial(greet, ['Hello']);\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = _createPartialApplicator(_concat);\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided to `g` followed by the arguments provided initially.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partial\n     * @example\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = _createPartialApplicator(flip(_concat));\n\n    /**\n     * Determines whether a nested path on an object has a specific value, in\n     * `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in\n     * the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @see R.props\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, [\n        pickAll,\n        identity\n    ]);\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return equals(val, obj[name]);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It may use\n     * `R.reduced` to shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * Dispatches to the `reduce` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduced, R.addIndex\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var plus = (a, b) => a + b;\n     *\n     *      R.reduce(plus, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Groups the elements of the list according to the result of calling\n     * the String-returning function `keyFn` on each element and reduces the elements\n     * of each group to a single value via the reducer function `valueFn`.\n     *\n     * This function is basically a more general `groupBy` function.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n     * @param {Function} valueFn The function that reduces the elements of each group to a single\n     *        value. Receives two values, accumulator for a particular group and the current element.\n     * @param {*} acc The (initial) accumulator value for each group.\n     * @param {Function} keyFn The function that maps the list's element into a key.\n     * @param {Array} list The array to group.\n     * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n     *         `valueFn` for elements which produced that key when passed to `keyFn`.\n     * @see R.groupBy, R.reduce\n     * @example\n     *\n     *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n     *      var namesByGrade = reduceToNamesBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Lucy', score: 92},\n     *                      {name: 'Drew', score: 85},\n     *                      // ...\n     *                      {name: 'Bart', score: 62}];\n     *      namesByGrade(students);\n     *      // {\n     *      //   'A': ['Lucy'],\n     *      //   'B': ['Drew']\n     *      //   // ...,\n     *      //   'F': ['Bart']\n     *      // }\n     */\n    var reduceBy = _curryN(4, [], _dispatchable('reduceBy', _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n        return _reduce(function (acc, elt) {\n            var key = keyFn(elt);\n            acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Like `reduce`, `reduceWhile` returns a single item by iterating through\n     * the list, successively calling the iterator function. `reduceWhile` also\n     * takes a predicate that is evaluated before each step. If the predicate returns\n     * `false`, it \"short-circuits\" the iteration and returns the current value\n     * of the accumulator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.22.0\n     * @category List\n     * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} pred The predicate. It is passed the accumulator and the\n     *        current element.\n     * @param {Function} fn The iterator function. Receives two values, the\n     *        accumulator and the current element.\n     * @param {*} a The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced\n     * @example\n     *\n     *      var isOdd = (acc, x) => x % 2 === 1;\n     *      var xs = [1, 3, 5, 60, 777, 800];\n     *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n     *\n     *      var ys = [2, 4, 6]\n     *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n     */\n    var reduceWhile = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n        return _reduce(function (acc, x) {\n            return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n        }, a, list);\n    });\n\n    /**\n     * The complement of `filter`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.filter, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isOdd = (n) => n % 2 === 1;\n     *\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    var reject = _curry2(function reject(pred, filterable) {\n        return filter(_complement(pred), filterable);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single\n     * item by iterating through the list, successively calling the transformed\n     * iterator function and passing it an accumulator value and the current value\n     * from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be\n     * wrapped as a transformer to initialize the transducer. A transformer can be\n     * passed directly in place of an iterator function. In both cases, iteration\n     * may be stopped early with the `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a\n     * transformer and can be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result\n     * extraction function, result. The step function is used as the iterator\n     * function in reduce. The result function is used to convert the final\n     * accumulator into the return type and in most cases is R.identity. The init\n     * function can be used to provide an initial accumulator, but is ignored by\n     * transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced, R.into\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list. Duplication is determined according to the value returned by\n     * applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(map(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    // Array.prototype.indexOf doesn't exist below IE9\n    // manually crawl the list to distinguish between +0 and -0\n    // NaN\n    // non-zero numbers can utilise Set\n    // all these types can utilise Set\n    // null can utilise Set\n    // anything else not covered above, defer to R.equals\n    var _indexOf = function _indexOf(list, a, idx) {\n        var inf, item;\n        // Array.prototype.indexOf doesn't exist below IE9\n        if (typeof list.indexOf === 'function') {\n            switch (typeof a) {\n            case 'number':\n                if (a === 0) {\n                    // manually crawl the list to distinguish between +0 and -0\n                    inf = 1 / a;\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (item === 0 && 1 / item === inf) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                } else if (a !== a) {\n                    // NaN\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (typeof item === 'number' && item !== item) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                }\n                // non-zero numbers can utilise Set\n                return list.indexOf(a, idx);\n            // all these types can utilise Set\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                return list.indexOf(a, idx);\n            case 'object':\n                if (a === null) {\n                    // null can utilise Set\n                    return list.indexOf(a, idx);\n                }\n            }\n        }\n        // anything else not covered above, defer to R.equals\n        while (idx < list.length) {\n            if (equals(list[idx], a)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if every one of the provided predicates is satisfied\n     * by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.anyPass\n     * @example\n     *\n     *      var isQueen = R.propEq('rank', 'Q');\n     *      var isSpade = R.propEq('suit', '♠︎');\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n     *\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n     */\n    var allPass = _curry1(function allPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (!preds[idx].apply(this, arguments)) {\n                    return false;\n                }\n                idx += 1;\n            }\n            return true;\n        });\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if at least one of the provided predicates is\n     * satisfied by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.allPass\n     * @example\n     *\n     *      var gte = R.anyPass([R.gt, R.equals]);\n     *\n     *      gte(3, 2); //=> true\n     *      gte(2, 2); //=> true\n     *      gte(2, 3); //=> false\n     */\n    var anyPass = _curry1(function anyPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (preds[idx].apply(this, arguments)) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        });\n    });\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * Dispatches to the `ap` method of the second argument, if present. Also\n     * treats curried functions as applicatives.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig [a -> b] -> [a] -> [b]\n     * @sig Apply f => f (a -> b) -> f a -> f b\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    // else\n    var ap = _curry2(function ap(applicative, fn) {\n        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {\n            return applicative(x)(fn(x));\n        } : // else\n        _reduce(function (acc, f) {\n            return _concat(acc, map(f, fn));\n        }, [], applicative);\n    });\n\n    /**\n     * Given a spec object recursively mapping properties to functions, creates a\n     * function producing an object of the same structure, by mapping each property\n     * to the result of calling its associated function with the supplied arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n     * @param {Object} spec an object recursively mapping properties to functions for\n     *        producing the values for these properties.\n     * @return {Function} A function that returns an object of the same structure\n     * as `spec', with each property set to the value returned by calling its\n     * associated function with the supplied arguments.\n     * @see R.converge, R.juxt\n     * @example\n     *\n     *      var getMetrics = R.applySpec({\n     *                                      sum: R.add,\n     *                                      nested: { mul: R.multiply }\n     *                                   });\n     *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n     */\n    var applySpec = _curry1(function applySpec(spec) {\n        spec = map(function (v) {\n            return typeof v == 'function' ? v : applySpec(v);\n        }, spec);\n        return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n            var args = arguments;\n            return map(function (f) {\n                return apply(f, args);\n            }, spec);\n        });\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right branch\n     * produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call, [\n     *                                  R.pipe(R.prop('indent'), indentN),\n     *                                  R.prop('value')\n     *                              ]);\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results. `chain`\n     * is also known as `flatMap` in some libraries\n     *\n     * Dispatches to the `chain` method of the second argument, if present,\n     * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain m => (a -> m b) -> m a -> m b\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = n => [n, n];\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n        if (typeof monad === 'function') {\n            return function () {\n                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n            };\n        }\n        return _makeFlat(false)(map(fn, monad));\n    }));\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n     * to `fn` are applied to each of the predicates in turn until one returns a\n     * \"truthy\" value, at which point `fn` returns the result of applying its\n     * arguments to the corresponding transformer. If none of the predicates\n     * matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        var arity = reduce(max, 0, map(function (pair) {\n            return pair[0].length;\n        }, pairs));\n        return _arity(arity, function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        });\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type. The arity of the function\n     * returned is specified to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = () => {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts a converging function and a list of branching functions and returns\n     * a new function. When invoked, this new function is applied to some\n     * arguments, each branching function is applied to those same arguments. The\n     * results of each branching function are passed as arguments to the converging\n     * function to produce the return value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.2\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {Array} functions A list of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = (a, b) => a + b;\n     *      var multiply = (a, b) => a * b;\n     *      var subtract = (a, b) => a - b;\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n     *\n     *      var add3 = (a, b, c) => a + b + c;\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n     */\n    var converge = _curry2(function converge(after, fns) {\n        return curryN(reduce(max, 0, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Counts the elements of a list according to how many match each value of a\n     * key generated by the supplied function. Returns an object mapping the keys\n     * produced by `fn` to the number of occurrences in the list. Note that all\n     * keys are coerced to strings because of how JavaScript objects work.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = reduceBy(function (acc, elem) {\n        return acc + 1;\n    }, 0);\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements. The\n     * first element in a series of equal element is the one being preserved.\n     *\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Takes a function and two values in its domain and returns `true` if the\n     * values map to the same value in the codomain; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Relation\n     * @sig (a -> b) -> a -> a -> Boolean\n     * @param {Function} f\n     * @param {*} x\n     * @param {*} y\n     * @return {Boolean}\n     * @example\n     *\n     *      R.eqBy(Math.abs, 5, -5); //=> true\n     */\n    var eqBy = _curry3(function eqBy(f, x, y) {\n        return equals(f(x), f(y));\n    });\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms, for\n     * the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of\n     * calling a String-returning function on each element, and grouping the\n     * results according to values returned.\n     *\n     * Dispatches to the `groupBy` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @see R.transduce\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {\n        if (acc == null) {\n            acc = [];\n        }\n        acc.push(item);\n        return acc;\n    }, null)));\n\n    /**\n     * Given a function that generates a key, turns a list of objects into an\n     * object indexing the objects by the given key. Note that if multiple\n     * objects generate the same value for the indexing key only the last value\n     * will be included in the generated object.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} array The array of objects to index\n     * @return {Object} An object indexing each array element by the given property.\n     * @example\n     *\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n     *      R.indexBy(R.prop('id'), list);\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n     */\n    var indexBy = reduceBy(function (acc, elem) {\n        return elem;\n    }, null);\n\n    /**\n     * Returns the position of the first occurrence of an item in an array, or -1\n     * if the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * juxt applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Function\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n     * @param {Array} fns An array of functions\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n     * @see R.applySpec\n     * @example\n     *\n     *      var getRange = R.juxt([Math.min, Math.max]);\n     *      getRange(3, 4, 9, -3); //=> [-3, 9]\n     */\n    var juxt = _curry1(function juxt(fns) {\n        return converge(_arrayOf, fns);\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (toFunctorFn) {\n            return function (target) {\n                return map(function (focus) {\n                    return setter(focus, target);\n                }, toFunctorFn(getter(target)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig [String] -> Lens s a\n     * @param {Array} path The path to use.\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xyLens = R.lensPath(['x', 'y']);\n     *\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n     */\n    var lensPath = _curry1(function lensPath(p) {\n        return lens(path(p), assocPath(p));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n     * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.lift, R.ap\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Takes a predicate and a list or other \"filterable\" object and returns the\n     * pair of filterable objects of the same type of elements which do and do not\n     * satisfy, the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n     * @param {Function} pred A predicate to determine which side the element belongs to.\n     * @param {Array} filterable the list (or other filterable) to partition.\n     * @return {Array} An array, containing first the subset of elements that satisfy the\n     *         predicate, and second the subset of elements that do not satisfy.\n     * @see R.filter, R.reject\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     *\n     *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n     *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n     */\n    var partition = juxt([\n        filter,\n        reject\n    ]);\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * **Note:** The result of pipe is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining functions\n     * must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n     * Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n     * @param {Function} of\n     * @param {*} traversable\n     * @return {*}\n     * @see R.traverse\n     * @example\n     *\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n     */\n    var sequence = _curry2(function sequence(of, traversable) {\n        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n            return ap(map(prepend, x), acc);\n        }, of([]), traversable);\n    });\n\n    /**\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n     * into an Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n     * @param {Function} of\n     * @param {Function} f\n     * @param {*} traversable\n     * @return {*}\n     * @see R.sequence\n     * @example\n     *\n     *      // Returns `Nothing` if the given divisor is `0`\n     *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n     *\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n     */\n    var traverse = _curry3(function traverse(of, f, traversable) {\n        return sequence(of, map(f, traversable));\n    });\n\n    /**\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain c => c (c a) -> c a\n     * @param {*} list\n     * @return {*}\n     * @see R.flatten, R.chain\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = chain(_identity);\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n                return /^\\d+$/.test(k);\n            }, keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            if (typeof x.toString === 'function') {\n                var repr = x.toString();\n                if (repr !== '[object Object]') {\n                    return repr;\n                }\n            }\n            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * **Note:** The result of compose is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.pipeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return compose.apply(this, prepend(identity, map(chain, arguments)));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = config => {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n     * least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     * @see R.any\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. `R.equals`\n     * is used to determine equality.\n     *\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.liftN\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n     *\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n     *\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.composeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Returns a new list without values in the first argument.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The values to be removed from `list2`.\n     * @param {Array} list2 The array to remove values from.\n     * @return {Array} The new array without values in `list1`.\n     * @see R.transduce\n     * @example\n     *\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n     */\n    var without = _curry2(function (xs, list) {\n        return reject(flip(_contains)(xs), list);\n    });\n\n    // A simple Set type that honours R.equals semantics\n    /* globals Set */\n    // until we figure out why jsdoc chokes on this\n    // @param item The item to add to the Set\n    // @returns {boolean} true if the item did not exist prior, otherwise false\n    //\n    //\n    // @param item The item to check for existence in the Set\n    // @returns {boolean} true if the item exists in the Set, otherwise false\n    //\n    //\n    // Combines the logic for checking whether an item is a member of the set and\n    // for adding a new item to the set.\n    //\n    // @param item       The item to check or add to the Set instance.\n    // @param shouldAdd  If true, the item will be added to the set if it doesn't\n    //                   already exist.\n    // @param set        The set instance to check or add to.\n    // @return {boolean} true if the item already existed, otherwise false.\n    //\n    // distinguish between +0 and -0\n    // these types can all utilise the native Set\n    // set._items['boolean'] holds a two element array\n    // representing [ falseExists, trueExists ]\n    // compare functions for reference equality\n    /* falls through */\n    // reduce the search size of heterogeneous sets by creating buckets\n    // for each type.\n    // scan through all previously applied items\n    var _Set = function () {\n        function _Set() {\n            /* globals Set */\n            this._nativeSet = typeof Set === 'function' ? new Set() : null;\n            this._items = {};\n        }\n        // until we figure out why jsdoc chokes on this\n        // @param item The item to add to the Set\n        // @returns {boolean} true if the item did not exist prior, otherwise false\n        //\n        _Set.prototype.add = function (item) {\n            return !hasOrAdd(item, true, this);\n        };\n        //\n        // @param item The item to check for existence in the Set\n        // @returns {boolean} true if the item exists in the Set, otherwise false\n        //\n        _Set.prototype.has = function (item) {\n            return hasOrAdd(item, false, this);\n        };\n        //\n        // Combines the logic for checking whether an item is a member of the set and\n        // for adding a new item to the set.\n        //\n        // @param item       The item to check or add to the Set instance.\n        // @param shouldAdd  If true, the item will be added to the set if it doesn't\n        //                   already exist.\n        // @param set        The set instance to check or add to.\n        // @return {boolean} true if the item already existed, otherwise false.\n        //\n        function hasOrAdd(item, shouldAdd, set) {\n            var type = typeof item;\n            var prevSize, newSize;\n            switch (type) {\n            case 'string':\n            case 'number':\n                // distinguish between +0 and -0\n                if (item === 0 && 1 / item === -Infinity) {\n                    if (set._items['-0']) {\n                        return true;\n                    } else {\n                        if (shouldAdd) {\n                            set._items['-0'] = true;\n                        }\n                        return false;\n                    }\n                }\n                // these types can all utilise the native Set\n                if (set._nativeSet !== null) {\n                    if (shouldAdd) {\n                        prevSize = set._nativeSet.size;\n                        set._nativeSet.add(item);\n                        newSize = set._nativeSet.size;\n                        return newSize === prevSize;\n                    } else {\n                        return set._nativeSet.has(item);\n                    }\n                } else {\n                    if (!(type in set._items)) {\n                        if (shouldAdd) {\n                            set._items[type] = {};\n                            set._items[type][item] = true;\n                        }\n                        return false;\n                    } else if (item in set._items[type]) {\n                        return true;\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type][item] = true;\n                        }\n                        return false;\n                    }\n                }\n            case 'boolean':\n                // set._items['boolean'] holds a two element array\n                // representing [ falseExists, trueExists ]\n                if (type in set._items) {\n                    var bIdx = item ? 1 : 0;\n                    if (set._items[type][bIdx]) {\n                        return true;\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type][bIdx] = true;\n                        }\n                        return false;\n                    }\n                } else {\n                    if (shouldAdd) {\n                        set._items[type] = item ? [\n                            false,\n                            true\n                        ] : [\n                            true,\n                            false\n                        ];\n                    }\n                    return false;\n                }\n            case 'function':\n                // compare functions for reference equality\n                if (set._nativeSet !== null) {\n                    if (shouldAdd) {\n                        prevSize = set._nativeSet.size;\n                        set._nativeSet.add(item);\n                        newSize = set._nativeSet.size;\n                        return newSize > prevSize;\n                    } else {\n                        return set._nativeSet.has(item);\n                    }\n                } else {\n                    if (!(type in set._items)) {\n                        if (shouldAdd) {\n                            set._items[type] = [item];\n                        }\n                        return false;\n                    }\n                    if (!_contains(item, set._items[type])) {\n                        if (shouldAdd) {\n                            set._items[type].push(item);\n                        }\n                        return false;\n                    }\n                    return true;\n                }\n            case 'undefined':\n                if (set._items[type]) {\n                    return true;\n                } else {\n                    if (shouldAdd) {\n                        set._items[type] = true;\n                    }\n                    return false;\n                }\n            case 'object':\n                if (item === null) {\n                    if (!set._items['null']) {\n                        if (shouldAdd) {\n                            set._items['null'] = true;\n                        }\n                        return false;\n                    }\n                    return true;\n                }\n            /* falls through */\n            default:\n                // reduce the search size of heterogeneous sets by creating buckets\n                // for each type.\n                type = Object.prototype.toString.call(item);\n                if (!(type in set._items)) {\n                    if (shouldAdd) {\n                        set._items[type] = [item];\n                    }\n                    return false;\n                }\n                // scan through all previously applied items\n                if (!_contains(item, set._items[type])) {\n                    if (shouldAdd) {\n                        set._items[type].push(item);\n                    }\n                    return false;\n                }\n                return true;\n            }\n        }\n        return _Set;\n    }();\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation,\n     * returning the result of the first function if it is false-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * false-y value.\n     *\n     * In addition to functions, `R.both` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return _isFunction(f) ? function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        } : lift(and)(f, g);\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * `R.complement` will work on all other functors as well.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = lift(not);\n\n    /**\n     * Returns the result of concatenating the given lists or strings.\n     *\n     * Note: `R.concat` expects both arguments to be of the same type,\n     * unlike the native `Array.prototype.concat` method. It will throw\n     * an error if you `concat` an Array with a non-Array value.\n     *\n     * Dispatches to the `concat` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @sig String -> String -> String\n     * @param {Array|String} a\n     * @param {Array|String} b\n     * @return {Array|String}\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(a, b) {\n        if (a == null || !_isFunction(a.concat)) {\n            throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\n        }\n        if (_isArray(a) && !_isArray(b)) {\n            throw new TypeError(toString(b) + ' is not an array');\n        }\n        return a.concat(b);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation,\n     * returning the result of the first function if it is truth-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * truth-y value.\n     *\n     * In addition to functions, `R.either` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return _isFunction(f) ? function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        } : lift(or)(f, g);\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function that can be\n     * called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {String} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && _isFunction(target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each element and\n     * concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn`\n     * for a given argument set and returns the result. Subsequent calls to the\n     * memoized `fn` with the same argument set will not result in an additional\n     * call to `fn`; instead, the cached result for that set of arguments will be\n     * returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(n => {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return _arity(fn.length, function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        });\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig (String | RegExp) -> String -> [String]\n     * @param {String|RegExp} sep The pattern.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n     * @example\n     *\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n     */\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n        return concat(difference(list1, list2), difference(list2, list1));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both. Duplication is determined according to the value\n     * returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifference, R.difference, R.differenceWith\n     * @example\n     *\n     *      var eqA = R.eqBy(R.prop('a'));\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n     */\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @see R.match\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        if (!_isRegExp(pattern)) {\n            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n        }\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied function to\n     * each list element. Prefers the first item if the supplied function produces\n     * the same value on two items. `R.equals` is used for comparison.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var set = new _Set();\n        var result = [];\n        var idx = 0;\n        var appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (set.add(appliedItem)) {\n                result.push(item);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list. `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqBy(identity);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @see R.intersectionWith\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        return uniq(_filter(flip(_contains)(lookupList), filteredList));\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        applySpec: applySpec,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clamp: clamp,\n        clone: clone,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        converge: converge,\n        countBy: countBy,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqBy: eqBy,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        groupBy: groupBy,\n        groupWith: groupWith,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexBy: indexBy,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        join: join,\n        juxt: juxt,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensPath: lensPath,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        mergeWith: mergeWith,\n        mergeWithKey: mergeWithKey,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        objOf: objOf,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        pair: pair,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pathOr: pathOr,\n        pathSatisfies: pathSatisfies,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceBy: reduceBy,\n        reduceRight: reduceRight,\n        reduceWhile: reduceWhile,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        sequence: sequence,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitAt: splitAt,\n        splitEvery: splitEvery,\n        splitWhen: splitWhen,\n        subtract: subtract,\n        sum: sum,\n        symmetricDifference: symmetricDifference,\n        symmetricDifferenceWith: symmetricDifferenceWith,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        transpose: transpose,\n        traverse: traverse,\n        trim: trim,\n        tryCatch: tryCatch,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unless: unless,\n        unnest: unnest,\n        until: until,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        when: when,\n        where: where,\n        whereEq: whereEq,\n        without: without,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n  /* eslint-env amd */\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/dist/ramda.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 4\n// module chunks = 0","/** @license React v16.7.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"scheduler\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\nfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\nSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\nvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\nfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\nfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\nn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(z);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=z.extend({data:null}),nb=z.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\nvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\nfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\nfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\nfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\nfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=mc(a.type);c=null;d&&(c=mc(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Yb,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nwc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction xc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ac(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\nfunction Cc(a,b){Bc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Dc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Dc(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ec(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Dc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Fc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Gc(a,b,c){a=z.getPooled(Fc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\nfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Gc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\nfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\nvar Vc={eventTypes:Fc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Gc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Dc(e,\"number\",e.value)}},Wc=z.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\nvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\nfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar od=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=z}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\nfunction H(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\nfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\nfunction ie(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\nfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&H(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\nfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\nfunction Fe(a,b,c,d,e){a[Ha]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Bc(a,e);we(c,d);d=we(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?te(a,h):\"dangerouslySetInnerHTML\"===g?oe(a,h):\"children\"===g?pe(a,h):xc(a,g,h,d)}switch(c){case \"input\":Cc(a,e);break;case \"textarea\":ie(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?fe(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?fe(a,!!e.multiple,e.defaultValue,\n!0):fe(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function Ge(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function He(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Ie=[],Je=-1;function I(a){0>Je||(a.current=Ie[Je],Ie[Je]=null,Je--)}function J(a,b){Je++;Ie[Je]=a.current;a.current=b}var Ke={},K={current:Ke},L={current:!1},Le=Ke;\nfunction Me(a,b){var c=a.type.contextTypes;if(!c)return Ke;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function M(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ne(a){I(L,a);I(K,a)}function Oe(a){I(L,a);I(K,a)}\nfunction Pe(a,b,c){K.current!==Ke?t(\"168\"):void 0;J(K,b,a);J(L,c,a)}function Qe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Re(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Ke;Le=K.current;J(K,b,a);J(L,L.current,a);return!0}\nfunction Se(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Qe(a,b,Le),d.__reactInternalMemoizedMergedChildContext=b,I(L,a),I(K,a),J(K,b,a)):I(L,a);J(L,c,a)}var Te=null,Ue=null;function Ve(a){return function(b){try{return a(b)}catch(c){}}}\nfunction We(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Te=Ve(function(a){return b.onCommitFiberRoot(c,a)});Ue=Ve(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Xe(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function N(a,b,c,d){return new Xe(a,b,c,d)}\nfunction Ye(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ze(a){if(\"function\"===typeof a)return Ye(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\nfunction $e(a,b){var c=a.alternate;null===c?(c=N(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction af(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ye(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return bf(c.children,e,f,b);case fc:return cf(c,e|3,f,b);case bc:return cf(c,e|2,f,b);case cc:return a=N(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=N(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=N(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function bf(a,b,c,d){a=N(7,a,d,b);a.expirationTime=c;return a}function cf(a,b,c,d){a=N(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function df(a,b,c){a=N(6,a,null,b);a.expirationTime=c;return a}\nfunction ef(a,b,c){b=N(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ff(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);gf(b,a)}\nfunction hf(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);gf(b,a)}function jf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}\nfunction gf(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var kf=!1;function lf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction mf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function of(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=lf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=lf(a.memoizedState),e=c.updateQueue=lf(c.memoizedState)):d=a.updateQueue=mf(e):null===e&&(e=c.updateQueue=mf(d));null===e||d===e?of(d,b):null===d.lastUpdate||null===e.lastUpdate?(of(d,b),of(e,b)):(of(d,b),e.lastUpdate=b)}\nfunction qf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=lf(a.memoizedState):rf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function rf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=mf(b));return b}\nfunction sf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:kf=!0}return d}\nfunction tf(a,b,c,d,e){kf=!1;b=rf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;r<e?(null===m&&(m=k,null===g&&(f=l)),h<r&&(h=r)):(l=sf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction uf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);vf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;vf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function vf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction wf(a,b){return{value:a,source:b,stack:nc(b)}}var xf={current:null},yf=null,zf=null,Af=null;function Bf(a,b){var c=a.type._context;J(xf,c._currentValue,a);c._currentValue=b}function Cf(a){var b=xf.current;I(xf,a);a.type._context._currentValue=b}function Df(a){yf=a;Af=zf=null;a.firstContextDependency=null}\nfunction Ef(a,b){if(Af!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Af=a,b=1073741823;b={context:a,observedBits:b,next:null};null===zf?(null===yf?t(\"293\"):void 0,yf.firstContextDependency=zf=b):zf=zf.next=b}return a._currentValue}var Ff={},O={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?t(\"174\"):void 0;return a}\nfunction Jf(a,b){J(Hf,b,a);J(Gf,a,a);J(O,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}I(O,a);J(O,b,a)}function Kf(a){I(O,a);I(Gf,a);I(Hf,a)}function Lf(a){If(Hf.current);var b=If(O.current);var c=me(b,a.type);b!==c&&(J(Gf,a,a),J(O,c,a))}function Mf(a){Gf.current===a&&(I(O,a),I(Gf,a))}\nfunction P(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Nf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Of=Xb.ReactCurrentOwner,Pf=(new aa.Component).refs;\nfunction Qf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Vf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Rf();d=Sf(d,a);var e=nf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Tf();pf(a,e);Uf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Rf();c=Sf(c,a);var d=nf(c);d.tag=\n2;void 0!==b&&null!==b&&(d.callback=b);Tf();pf(a,d);Uf(a,c)}};function Wf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\nfunction Xf(a,b,c){var d=!1,e=Ke;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Of.currentDispatcher.readContext(f):(e=M(b)?Le:K.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Me(a,e):Ke);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Vf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Zf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Vf.enqueueReplaceState(b,b.state,null)}\nfunction $f(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Pf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Of.currentDispatcher.readContext(f):(f=M(b)?Le:K.current,e.context=Me(a,f));f=a.updateQueue;null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Qf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Vf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(tf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var ag=Array.isArray;\nfunction bg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Pf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\nfunction cg(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction dg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=$e(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=bg(a,b,c),d.return=a,d;d=af(c.type,c.key,c.props,null,a.mode,d);d.ref=bg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=ef(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=bf(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=df(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=af(b.type,b.key,b.props,null,a.mode,c),c.ref=bg(a,null,b),c.return=a,c;case $b:return b=ef(b,a.mode,c),b.return=a,b}if(ag(b)||\nlc(b))return b=bf(b,a.mode,c,null),b.return=a,b;cg(a,b)}return null}function w(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(ag(c)||lc(c))return null!==e?null:m(a,b,c,d,null);cg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(ag(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);cg(b,d)}return null}function B(e,g,h,k){for(var l=null,q=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=w(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\nm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===q?l=v:q.sibling=v;q=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=r(e,h[u],k))g=f(m,g,u),null===q?l=m:q.sibling=m,q=m;return l}for(m=d(e,m);u<h.length;u++)if(p=y(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===q?l=p:q.sibling=p,q=p;a&&m.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,p=null,v=h.next();null!==q&&!v.done;u++,v=h.next()){q.index>u?(p=q,q=null):p=q.sibling;var A=w(e,q,v.value,k);if(null===A){q||(q=p);break}a&&q&&null===A.alternate&&b(e,q);g=f(A,g,u);null===m?l=A:m.sibling=A;m=A;q=p}if(v.done)return c(e,q),l;if(null===q){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(q=d(e,q);!v.done;u++,v=h.next())v=y(q,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&q.delete(null===v.key?u:\nv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=bg(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===ac?(d=bf(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=af(f.type,f.key,f.props,null,a.mode,h),h.ref=bg(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ef(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=df(f,a.mode,h),d.return=a,a=d),g(a);if(ag(f))return B(a,d,f,h);if(lc(f))return R(a,d,f,h);l&&cg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var eg=dg(!0),fg=dg(!1),gg=null,hg=null,ig=!1;\nfunction jg(a,b){var c=N(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function kg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\nfunction lg(a){if(ig){var b=hg;if(b){var c=b;if(!kg(a,b)){b=Ge(c);if(!b||!kg(a,b)){a.effectTag|=2;ig=!1;gg=a;return}jg(gg,c)}gg=a;hg=He(b)}else a.effectTag|=2,ig=!1,gg=a}}function mg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;gg=a}function ng(a){if(a!==gg)return!1;if(!ig)return mg(a),ig=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=hg;b;)jg(a,b),b=Ge(b);mg(a);hg=gg?Ge(a.stateNode):null;return!0}function og(){hg=gg=null;ig=!1}var pg=Xb.ReactCurrentOwner;\nfunction Q(a,b,c,d){b.child=null===a?fg(b,null,c,d):eg(b,a.child,c,d)}function qg(a,b,c,d,e){c=c.render;var f=b.ref;Df(b,e);d=c(d,f);b.effectTag|=1;Q(a,b,d,e);return b.child}\nfunction rg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ye(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,sg(a,b,g,d,e,f);a=af(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return tg(a,b,f);b.effectTag|=1;a=$e(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction sg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?tg(a,b,f):ug(a,b,c,d,f)}function vg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function ug(a,b,c,d,e){var f=M(c)?Le:K.current;f=Me(b,f);Df(b,e);c=c(d,f);b.effectTag|=1;Q(a,b,c,e);return b.child}\nfunction wg(a,b,c,d,e){if(M(c)){var f=!0;Re(b)}else f=!1;Df(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Xf(b,c,d,e),$f(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l));var m=c.getDerivedStateFromProps,r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;r||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l);kf=!1;var w=b.memoizedState;k=g.state=w;var y=b.updateQueue;null!==y&&(tf(b,y,d,g,e),k=b.memoizedState);h!==d||w!==k||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),k=b.memoizedState),(h=kf||Wf(b,c,h,d,w,k,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:P(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Of.currentDispatcher.readContext(l):(l=M(c)?Le:K.current,l=Me(b,l)),m=c.getDerivedStateFromProps,\n(r=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Zf(b,g,d,l),kf=!1,k=b.memoizedState,w=g.state=k,y=b.updateQueue,null!==y&&(tf(b,y,d,g,e),w=b.memoizedState),h!==d||k!==w||L.current||kf?(\"function\"===typeof m&&(Qf(b,c,m,d),w=b.memoizedState),(m=kf||Wf(b,c,h,d,k,w,l))?(r||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,w,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,w,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=w),g.props=d,g.state=w,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return xg(a,b,c,d,f,e)}\nfunction xg(a,b,c,d,e,f){vg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Se(b,c,!1),tg(a,b,f);d=b.stateNode;pg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=eg(b,a.child,null,f),b.child=eg(b,null,h,f)):Q(a,b,h,f);b.memoizedState=d.state;e&&Se(b,c,!0);return b.child}function yg(a){var b=a.stateNode;b.pendingContext?Pe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Pe(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction zg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=bf(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=bf(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=fg(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=$e(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=$e(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=eg(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=bf(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=bf(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=eg(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction tg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=$e(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=$e(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Ag(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!L.current&&d<c){switch(b.tag){case 3:yg(b);og();break;case 5:Lf(b);break;case 1:M(b.type)&&Re(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Bf(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return zg(a,b,c);b=tg(a,b,c);return null!==b?b.sibling:null}}return tg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\na&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Me(b,K.current);Df(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(M(d)){var f=!0;Re(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Qf(b,d,g,a);e.updater=Vf;b.stateNode=e;e._reactInternalFiber=b;$f(b,d,a,c);b=xg(null,b,d,!0,f,c)}else b.tag=0,Q(null,b,e,c),b=b.child;\nreturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Nf(e);b.type=a;e=b.tag=Ze(a);f=P(a,f);g=void 0;switch(e){case 0:g=ug(null,b,a,f,c);break;case 1:g=wg(null,b,a,f,c);break;case 11:g=qg(null,b,a,f,c);break;case 14:g=rg(null,b,a,P(a.type,f),d,c);break;default:t(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),ug(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),wg(a,b,\nd,e,c);case 3:yg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;tf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)og(),b=tg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)hg=He(b.stateNode.containerInfo),gg=b,e=ig=!0;e?(b.effectTag|=2,b.child=fg(b,null,d,c)):(Q(a,b,d,c),og());b=b.child}return b;case 5:return Lf(b),null===a&&lg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\nf&&Ce(d,f)&&(b.effectTag|=16),vg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(Q(a,b,g,c),b=b.child),b;case 6:return null===a&&lg(b),null;case 13:return zg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=eg(b,null,d,c):Q(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),qg(a,b,d,e,c);case 7:return Q(a,b,b.pendingProps,c),b.child;case 8:return Q(a,b,b.pendingProps.children,c),b.child;case 12:return Q(a,b,b.pendingProps.children,\nc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Bf(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!L.current){b=tg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=nf(c);k.tag=2;pf(g,k)}g.expirationTime<\nc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\nif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}Q(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Df(b,c),e=Ef(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,Q(a,b,d,c),b.child;case 14:return e=b.type,f=P(e,b.pendingProps),f=P(e.type,f),rg(a,b,e,f,d,c);case 15:return sg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:P(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,M(d)?(a=\n!0,Re(b)):a=!1,Df(b,c),Xf(b,d,e,c),$f(b,d,e,c),xg(null,b,d,!0,a,c);default:t(\"156\")}}function Bg(a){a.effectTag|=4}var Cg=void 0,Gg=void 0,Hg=void 0,Ig=void 0;Cg=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Gg=function(){};\nHg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(O.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&Bg(b)}};Ig=function(a,b,c,d){c!==d&&Bg(b)};\nvar Jg=\"function\"===typeof WeakSet?WeakSet:Set;function Kg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Lg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Mg(a,c)}else b.current=null}\nfunction Ng(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=se(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction Og(a){\"function\"===typeof Ue&&Ue(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Mg(e,f)}}c=c.next}while(c!==b)}break;case 1:Lg(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Mg(a,f)}break;case 5:Lg(a);break;case 4:Pg(a)}}\nfunction Qg(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Rg(a){a:{for(var b=a.return;null!==b;){if(Qg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Qg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Pg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Og(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Og(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Sg(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Fe(c,f,e,a,d,b)}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Rf()));null!==a&&Ng(a,d);c=b.updateQueue;\nif(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new Jg);c.forEach(function(a){var c=Tg.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:t(\"163\")}}var Ug=\"function\"===typeof WeakMap?WeakMap:Map;function Vg(a,b,c){c=nf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Wg(d);Kg(a,b)};return c}\nfunction Xg(a,b,c){c=nf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Yg?Yg=new Set([this]):Yg.add(this));var c=b.value,e=b.stack;Kg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Zg(a){switch(a.tag){case 1:M(a.type)&&Ne(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Oe(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Kf(a),null;case 10:return Cf(a),null;default:return null}}\nvar $g={readContext:Ef},ah=Xb.ReactCurrentOwner,bh=1073741822,ch=0,dh=!1,S=null,T=null,U=0,eh=-1,fh=!1,V=null,gh=!1,hh=null,ih=null,Yg=null;function jh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ne(b);break;case 3:Kf(b);Oe(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Cf(b)}a=a.return}T=null;U=0;eh=-1;fh=!1;S=null}function Tf(){null!==ih&&(ba.unstable_cancelCallback(hh),ih())}\nfunction kh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){S=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:M(b.type)&&Ne(b);break;case 3:Kf(b);Oe(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)ng(b),b.effectTag&=-3;Gg(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)Hg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var k=If(O.current);if(ng(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,r=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":H(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)H(bb[l],e);break;case \"source\":H(\"error\",e);break;case \"img\":case \"image\":case \"link\":H(\"error\",e);H(\"load\",e);break;case \"form\":H(\"reset\",e);H(\"submit\",e);break;case \"details\":H(\"toggle\",e);break;case \"input\":Ac(e,m);H(\"invalid\",e);xe(r,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};H(\"invalid\",e);xe(r,\"onChange\");break;case \"textarea\":he(e,m),H(\"invalid\",e),xe(r,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(r,f));switch(h){case \"input\":Vb(e);Ec(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&Bg(b)}else{m=b;e=f;r=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Cg(e,b,!1,!1);r=e;l=f;m=g;var w=h,y=we(l,m);switch(l){case \"iframe\":case \"object\":H(\"load\",\nr);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)H(bb[h],r);h=m;break;case \"source\":H(\"error\",r);h=m;break;case \"img\":case \"image\":case \"link\":H(\"error\",r);H(\"load\",r);h=m;break;case \"form\":H(\"reset\",r);H(\"submit\",r);h=m;break;case \"details\":H(\"toggle\",r);h=m;break;case \"input\":Ac(r,m);h=zc(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;case \"option\":h=ee(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});H(\"invalid\",r);xe(w,\"onChange\");break;case \"textarea\":he(r,\nm);h=ge(r,m);H(\"invalid\",r);xe(w,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,R=r,v=h;for(k in v)if(v.hasOwnProperty(k)){var q=v[k];\"style\"===k?te(R,q):\"dangerouslySetInnerHTML\"===k?(q=q?q.__html:void 0,null!=q&&oe(R,q)):\"children\"===k?\"string\"===typeof q?(\"textarea\"!==B||\"\"!==q)&&pe(R,q):\"number\"===typeof q&&pe(R,\"\"+q):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=q&&xe(w,k):null!=q&&xc(R,k,q,y))}switch(l){case \"input\":Vb(r);\nEc(r,m,!1);break;case \"textarea\":Vb(r);je(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":h=r;h.multiple=!!m.multiple;r=m.value;null!=r?fe(h,!!m.multiple,r,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(r.onclick=ye)}(g=Be(f,g))&&Bg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Ig(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=If(Hf.current),If(O.current),ng(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&Bg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;S=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);Gg(b);break;case 10:Cf(b);break;case 9:break;case 14:break;case 17:M(b.type)&&Ne(b);break;default:t(\"156\")}S=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==S)return S;null!==c&&0===(c.effectTag&1024)&&(null===\nc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Zg(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction lh(a){var b=Ag(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=kh(a));ah.current=null;return b}\nfunction mh(a,b){dh?t(\"243\"):void 0;Tf();dh=!0;ah.currentDispatcher=$g;var c=a.nextExpirationTimeToWorkOn;if(c!==U||a!==T||null===S)jh(),T=a,U=c,S=$e(T.current,null,U),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==S&&!nh();)S=lh(S);else for(;null!==S;)S=lh(S)}catch(B){if(Af=zf=yf=null,null===S)d=!0,Wg(B);else{null===S?t(\"271\"):void 0;var e=S,f=e.return;if(null===f)d=!0,Wg(B);else{a:{var g=a,h=f,k=e,l=B;f=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\ntypeof l&&\"function\"===typeof l.then){var m=l;l=h;var r=-1,w=-1;do{if(13===l.tag){var y=l.alternate;if(null!==y&&(y=y.memoizedState,null!==y)){w=10*(1073741822-y.timedOutAt);break}y=l.pendingProps.maxDuration;if(\"number\"===typeof y)if(0>=y)r=0;else if(-1===r||y<r)r=y}l=l.return}while(null!==l);l=h;do{if(y=13===l.tag)y=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(y){h=l.updateQueue;null===h?l.updateQueue=new Set([m]):h.add(m);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n1===k.tag&&(null===k.alternate?k.tag=17:(f=nf(1073741823),f.tag=2,pf(k,f)));k.expirationTime=1073741823;break a}k=g.pingCache;null===k?(k=g.pingCache=new Ug,h=new Set,k.set(m,h)):(h=k.get(m),void 0===h&&(h=new Set,k.set(m,h)));h.has(f)||(h.add(f),k=oh.bind(null,g,m,f),m.then(k,k));-1===r?g=1073741823:(-1===w&&(w=10*(1073741822-jf(g,f))-5E3),g=w+r);0<=g&&eh<g&&(eh=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+\nnc(k))}fh=!0;l=wf(l,k);g=h;do{switch(g.tag){case 3:g.effectTag|=2048;g.expirationTime=f;f=Vg(g,l,f);qf(g,f);break a;case 1:if(m=l,r=g.type,w=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof r.getDerivedStateFromError||null!==w&&\"function\"===typeof w.componentDidCatch&&(null===Yg||!Yg.has(w)))){g.effectTag|=2048;g.expirationTime=f;f=Xg(g,m,f);qf(g,f);break a}}g=g.return}while(null!==g)}S=kh(e);continue}}}break}while(1);dh=!1;Af=zf=yf=ah.currentDispatcher=null;if(d)T=null,a.finishedWork=null;\nelse if(null!==S)a.finishedWork=null;else{d=a.current.alternate;null===d?t(\"281\"):void 0;T=null;if(fh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){hf(a,c);ph(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;ph(a,d,c,b,-1);return}}b&&-1!==eh?(hf(a,c),b=10*(1073741822-jf(a,c)),b<eh&&(eh=b),b=10*(1073741822-Rf()),b=eh-b,ph(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=\nc,a.finishedWork=d)}}function Mg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Yg||!Yg.has(d))){a=wf(b,a);a=Xg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}break;case 3:a=wf(b,a);a=Vg(c,a,1073741823);pf(c,a);Uf(c,1073741823);return}c=c.return}3===a.tag&&(c=wf(b,a),c=Vg(a,c,1073741823),pf(a,c),Uf(a,1073741823))}\nfunction Sf(a,b){0!==ch?a=ch:dh?a=gh?1073741823:U:b.mode&1?(a=qh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==T&&a===U&&--a):a=1073741823;qh&&(0===rh||a<rh)&&(rh=a);return a}function oh(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==T&&U===c)T=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;gf(c,a);c=a.expirationTime;0!==c&&sh(a,c)}}\nfunction Tg(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=Rf();b=Sf(b,a);a=th(a,b);null!==a&&(ff(a,b),b=a.expirationTime,0!==b&&sh(a,b))}\nfunction th(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction Uf(a,b){a=th(a,b);null!==a&&(!dh&&0!==U&&b>U&&jh(),ff(a,b),dh&&!gh&&T===a||sh(a,a.expirationTime),uh>vh&&(uh=0,t(\"185\")))}function wh(a,b,c,d,e){var f=ch;ch=1073741823;try{return a(b,c,d,e)}finally{ch=f}}var xh=null,W=null,yh=0,zh=void 0,X=!1,Ah=null,Y=0,rh=0,Bh=!1,Ch=null,Z=!1,Dh=!1,qh=!1,Eh=null,Fh=ba.unstable_now(),Gh=1073741822-(Fh/10|0),Hh=Gh,vh=50,uh=0,Ih=null;function Jh(){Gh=1073741822-((ba.unstable_now()-Fh)/10|0)}\nfunction Kh(a,b){if(0!==yh){if(b<yh)return;null!==zh&&ba.unstable_cancelCallback(zh)}yh=b;a=ba.unstable_now()-Fh;zh=ba.unstable_scheduleCallback(Lh,{timeout:10*(1073741822-b)-a})}function ph(a,b,c,d,e){a.expirationTime=d;0!==e||nh()?0<e&&(a.timeoutHandle=De(Mh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Mh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Jh();Hh=Gh;Nh(a,c)}function Rf(){if(X)return Hh;Oh();if(0===Y||1===Y)Jh(),Hh=Gh;return Hh}\nfunction sh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===W?(xh=W=a,a.nextScheduledRoot=a):(W=W.nextScheduledRoot=a,W.nextScheduledRoot=xh)):b>a.expirationTime&&(a.expirationTime=b);X||(Z?Dh&&(Ah=a,Y=1073741823,Ph(a,1073741823,!1)):1073741823===b?Qh(1073741823,!1):Kh(a,b))}\nfunction Oh(){var a=0,b=null;if(null!==W)for(var c=W,d=xh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===W?t(\"244\"):void 0;if(d===d.nextScheduledRoot){xh=W=d.nextScheduledRoot=null;break}else if(d===xh)xh=e=d.nextScheduledRoot,W.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===W){W=c;W.nextScheduledRoot=xh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===W)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}Ah=b;Y=a}var Rh=!1;function nh(){return Rh?!0:ba.unstable_shouldYield()?Rh=!0:!1}function Lh(){try{if(!nh()&&null!==xh){Jh();var a=xh;do{var b=a.expirationTime;0!==b&&Gh<=b&&(a.nextExpirationTimeToWorkOn=Gh);a=a.nextScheduledRoot}while(a!==xh)}Qh(0,!0)}finally{Rh=!1}}\nfunction Qh(a,b){Oh();if(b)for(Jh(),Hh=Gh;null!==Ah&&0!==Y&&a<=Y&&!(Rh&&Gh>Y);)Ph(Ah,Y,Gh>Y),Oh(),Jh(),Hh=Gh;else for(;null!==Ah&&0!==Y&&a<=Y;)Ph(Ah,Y,!1),Oh();b&&(yh=0,zh=null);0!==Y&&Kh(Ah,Y);uh=0;Ih=null;if(null!==Eh)for(a=Eh,Eh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Bh||(Bh=!0,Ch=d)}}if(Bh)throw a=Ch,Ch=null,Bh=!1,a;}function Nh(a,b){X?t(\"253\"):void 0;Ah=a;Y=b;Ph(a,b,!1);Qh(1073741823,!1)}\nfunction Ph(a,b,c){X?t(\"245\"):void 0;X=!0;if(c){var d=a.finishedWork;null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&(nh()?a.finishedWork=d:Sh(a,d,b)))}else d=a.finishedWork,null!==d?Sh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),mh(a,c),d=a.finishedWork,null!==d&&Sh(a,d,b));X=!1}\nfunction Sh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===Eh?Eh=[d]:Eh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ih?uh++:(Ih=a,uh=0);gh=dh=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n0):(d<a.latestPingedTime&&(a.latestPingedTime=0),e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ff(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ff(a,d)):d>e&&ff(a,d));gf(0,a);ah.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in\ne)var f={start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,r=-1,w=0,y=0,B=e,R=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;R=B;B=v}for(;;){if(B===\ne)break b;R===f&&++w===h&&(m=l);R===k&&++y===g&&(r=l);if(null!==(v=B.nextSibling))break;B=R;R=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(V=d;null!==V;){e=!1;f=void 0;try{for(;null!==V;){if(V.effectTag&256)a:{var q=V.alternate;h=V;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==q){var u=q.memoizedProps,A=q.memoizedState,Yf=h.stateNode,Vh=Yf.getSnapshotBeforeUpdate(h.elementType===\nh.type?u:P(h.type,u),A);Yf.__reactInternalSnapshotBeforeUpdate=Vh}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}V=V.nextEffect}}catch(db){e=!0,f=db}e&&(null===V?t(\"178\"):void 0,Mg(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){q=!1;u=void 0;try{for(;null!==V;){var x=V.effectTag;x&16&&pe(V.stateNode,\"\");if(x&128){var C=V.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(x&14){case 2:Rg(V);V.effectTag&=-3;break;case 6:Rg(V);\nV.effectTag&=-3;Sg(V.alternate,V);break;case 4:Sg(V.alternate,V);break;case 8:A=V;Pg(A);A.return=null;A.child=null;A.memoizedState=null;A.updateQueue=null;var G=A.alternate;null!==G&&(G.return=null,G.child=null,G.memoizedState=null,G.updateQueue=null)}V=V.nextEffect}}catch(db){q=!0,u=db}q&&(null===V?t(\"178\"):void 0,Mg(V,u),null!==V&&(V=V.nextEffect))}p=Ae;C=Td();x=p.focusedElem;q=p.selectionRange;if(C!==x&&x&&x.ownerDocument&&Sd(x.ownerDocument.documentElement,x)){null!==q&&Ud(x)&&(C=q.start,p=q.end,\nvoid 0===p&&(p=C),\"selectionStart\"in x?(x.selectionStart=C,x.selectionEnd=Math.min(p,x.value.length)):(p=(C=x.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),u=x.textContent.length,G=Math.min(q.start,u),q=void 0===q.end?G:Math.min(q.end,u),!p.extend&&G>q&&(u=q,q=G,G=u),u=Rd(x,G),A=Rd(x,q),u&&A&&(1!==p.rangeCount||p.anchorNode!==u.node||p.anchorOffset!==u.offset||p.focusNode!==A.node||p.focusOffset!==A.offset)&&(C=C.createRange(),C.setStart(u.node,u.offset),p.removeAllRanges(),\nG>q?(p.addRange(C),p.extend(A.node,A.offset)):(C.setEnd(A.node,A.offset),p.addRange(C))))));C=[];for(p=x;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof x.focus&&x.focus();for(x=0;x<C.length;x++)p=C[x],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(V=d;null!==V;){d=!1;x=void 0;try{for(C=c;null!==V;){var Fb=V.effectTag;if(Fb&36){var Gb=V.alternate;p=V;G=C;switch(p.tag){case 0:case 11:case 15:break;\ncase 1:var Hc=p.stateNode;if(p.effectTag&4)if(null===Gb)Hc.componentDidMount();else{var ii=p.elementType===p.type?Gb.memoizedProps:P(p.type,Gb.memoizedProps);Hc.componentDidUpdate(ii,Gb.memoizedState,Hc.__reactInternalSnapshotBeforeUpdate)}var Dg=p.updateQueue;null!==Dg&&uf(p,Dg,Hc,G);break;case 3:var Eg=p.updateQueue;if(null!==Eg){q=null;if(null!==p.child)switch(p.child.tag){case 5:q=p.child.stateNode;break;case 1:q=p.child.stateNode}uf(p,Eg,q,G)}break;case 5:var ji=p.stateNode;null===Gb&&p.effectTag&\n4&&Be(p.type,p.memoizedProps)&&ji.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=V.ref;if(null!==Ic){var Fg=V.stateNode;switch(V.tag){case 5:var ce=Fg;break;default:ce=Fg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}V=V.nextEffect}}catch(db){d=!0,x=db}d&&(null===V?t(\"178\"):void 0,Mg(V,x),null!==V&&(V=V.nextEffect))}dh=gh=!1;\"function\"===typeof Te&&Te(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Yg=\nnull);a.expirationTime=b;a.finishedWork=null}function Wg(a){null===Ah?t(\"246\"):void 0;Ah.expirationTime=0;Bh||(Bh=!0,Ch=a)}function Th(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||X||Qh(1073741823,!1)}}function Uh(a,b){if(Z&&!Dh){Dh=!0;try{return a(b)}finally{Dh=!1}}return a(b)}function Wh(a,b,c){if(qh)return a(b,c);Z||X||0===rh||(Qh(rh,!1),rh=0);var d=qh,e=Z;Z=qh=!0;try{return a(b,c)}finally{qh=d,(Z=e)||X||Qh(1073741823,!1)}}\nfunction Xh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(M(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(M(h)){c=Qe(c,h,g);break a}}c=g}else c=Ke;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nTf();pf(f,e);Uf(f,d);return d}function Yh(a,b,c,d){var e=b.current,f=Rf();e=Sf(f,e);return Xh(a,b,c,e,d)}function Zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function $h(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nCb=function(a,b,c){switch(b){case \"input\":Cc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Cc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\nfunction ai(a){var b=1073741822-25*(((1073741822-Rf()+500)/25|0)+1);b>=bh&&(b=bh-1);this._expirationTime=bh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}ai.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new bi;Xh(a,b,null,c,d._onCommit);return d};\nai.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nai.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Nh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};ai.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function bi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}bi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nbi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction ci(a,b,c){b=N(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nci.prototype.render=function(a,b){var c=this._internalRoot,d=new bi;b=void 0===b?null:b;null!==b&&d.then(b);Yh(a,c,null,d._onCommit);return d};ci.prototype.unmount=function(a){var b=this._internalRoot,c=new bi;a=void 0===a?null:a;null!==a&&c.then(a);Yh(null,b,null,c._onCommit);return c};ci.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new bi;c=void 0===c?null:c;null!==c&&e.then(c);Yh(b,d,a,e._onCommit);return e};\nci.prototype.createBatch=function(){var a=new ai(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function di(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Th;Lb=Wh;Mb=function(){X||0===rh||(Qh(rh,!1),rh=0)};\nfunction ei(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new ci(a,!1,b)}\nfunction fi(a,b,c,d,e){di(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=ei(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Zh(f._internalRoot);h.call(a)}}Uh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Zh(f._internalRoot)}\nfunction gi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;di(b)?void 0:t(\"200\");return $h(a,b,null,c)}\nvar ki={createPortal:gi,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return fi(null,a,b,!0,c)},render:function(a,b,c){return fi(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return fi(a,b,c,!1,d)},unmountComponentAtNode:function(a){di(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(Uh(function(){fi(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return gi.apply(void 0,arguments)},unstable_batchedUpdates:Th,unstable_interactiveUpdates:Wh,flushSync:function(a,b){X?t(\"187\"):void 0;var c=Z;Z=!0;try{return wh(a,b)}finally{Z=c,Qh(1073741823,!1)}},unstable_createRoot:hi,unstable_flushControlled:function(a){var b=Z;Z=!0;try{wh(a)}finally{(Z=b)||X||Qh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\nKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]}};function hi(a,b){di(a)?void 0:t(\"299\",\"unstable_createRoot\");return new ci(a,!0,null!=b&&!0===b.hydrate)}(function(a){var b=a.findFiberByHostInstance;return We(n({},a,{overrideProps:null,findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.7.0\",rendererPackageName:\"react-dom\"});\nvar li={default:ki},mi=li&&ki||li;module.exports=mi.default||mi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 5\n// module chunks = 0","/** @license React v16.7.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\nfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\nJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\nfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\nif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.7.0\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 6\n// module chunks = 0","/** @license React v0.12.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=c.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;d=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=d()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===c)c=g.next=g.previous=g;else{d=null;a=c;do{if(a.expirationTime>=b){d=a;break}a=a.next}while(a!==c);null===d?d=c:d===c&&(c=g,p());b=d.previous;b.next=d.previous=g;g.next=d;g.previous=\nb}}function v(){if(-1===k&&null!==c&&1===c.priorityLevel){m=!0;try{do u();while(null!==c&&1===c.priorityLevel)}finally{m=!1,null!==c?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==c;){var d=exports.unstable_now();if(c.expirationTime<=d){do u();while(null!==c&&c.expirationTime<=d)}else break}else if(null!==c){do u();while(null!==c&&!w())}}finally{m=!1,f=b,null!==c?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var d=exports.unstable_now(),e=!1;if(0>=P-d)if(-1!==b&&b<=d)e=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var d=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=d,k=e,v()}};\nexports.unstable_scheduleCallback=function(a,b){var d=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=d+b.timeout;else switch(h){case 1:b=d+-1;break;case 2:b=d+250;break;case 5:b=d+1073741823;break;case 4:b=d+1E4;break;default:b=d+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,p();else{d=null;var e=c;do{if(e.expirationTime>b){d=e;break}e=e.next}while(e!==c);null===d?d=c:d===c&&(c=a,p());\nb=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var d=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=d,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\nexports.unstable_shouldYield=function(){return!f&&(null!==c&&c.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==c&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return c};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 8\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0","import { union as juntaTudo, uniq as naoRepete} from 'ramda'\n\nimport sum, { sub, multiplication, div as division, PI } from './utils'\n\nimport react from 'react'\nimport reactDOM from 'react-dom'\n\nconst arr1 = [1, 1, 1, 2, 2, 3, 4, 5, 6, 6]\nconst arr2 = [5, 6, 6, 6, 7, 7, 8, 9, 10, 1]\n\nconst arr3 = juntaTudo(arr1, arr2)\n\nconst arr4 = naoRepete(arr1)\n\nconsole.log('Union is working', arr3)\nconsole.log('Uniq is working', arr4)\n\nconsole.log('module export default', sum(2,4))\nconsole.log('module export function', sub(2,4))\nconsole.log('module export above function', multiplication(2,4))\nconsole.log('module export above function together', division(2,4))\nconsole.log('module export Variable', PI)\n\n\n// WEBPACK FOOTER //\n// ./app.js"],"sourceRoot":""}